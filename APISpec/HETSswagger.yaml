swagger: '2.0'
info:
  version: v1
  title: REST API Documentation for the MOTI Hired Equipment Tracking System (HETS) Application
  description: |
    The Hired Equipment Program is for owners/operators who have a dump truck, bulldozer, backhoe or 
    other piece of equipment they want to hire out to the transportation ministry for day labour and 
    emergency projects. 
    The Hired Equipment Program distributes available work to local equipment owners. The program is 
    based on seniority and is designed to deliver work to registered users fairly and efficiently 
    through the development of local area call-out lists.
  termsOfService: N/A
basePath: /api
paths:
  /equipment:
    get:
      tags:
        - Equipment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"
    post:
      tags:
        - Equipment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Equipment"
      responses:
        201:
          description: Equipment created
          headers:
            Location:
              description: A link to the Equipment
              type: string
              format: url
          schema:
            $ref: "#/definitions/Equipment"  
  /equipment/{id}:
    get:
      tags:
        - Equipment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Equipment"
        404:
          description: Equipment not found
      parameters:
        - name: id
          in: path
          description: id of Equipment to fetch
          required: true
          type: integer
    put:
      tags:
        - Equipment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Equipment"
        404:
          description: Equipment not found
      parameters:
        - name: id
          in: path
          description: id of Equipment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Equipment"
  /equipment/{id}/delete:
    post:
      tags:
        - Equipment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Equipment not found
      parameters:
        - name: id
          in: path
          description: id of Equipment to delete
          required: true
          type: integer

  /equipment/bulk:
    post:
      tags:
        - Equipment
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"
      responses:
        201:
          description: Equipment created
  /equipmentTypes:
    get:
      tags:
        - EquipmentType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/EquipmentType"
    post:
      tags:
        - EquipmentType
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/EquipmentType"
      responses:
        201:
          description: EquipmentType created
          headers:
            Location:
              description: A link to the EquipmentType
              type: string
              format: url
          schema:
            $ref: "#/definitions/EquipmentType"  
  /equipmentTypes/{id}:
    get:
      tags:
        - EquipmentType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/EquipmentType"
        404:
          description: EquipmentType not found
      parameters:
        - name: id
          in: path
          description: id of EquipmentType to fetch
          required: true
          type: integer
    put:
      tags:
        - EquipmentType
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/EquipmentType"
        404:
          description: EquipmentType not found
      parameters:
        - name: id
          in: path
          description: id of EquipmentType to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/EquipmentType"
  /equipmentTypes/{id}/delete:
    post:
      tags:
        - EquipmentType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: EquipmentType not found
      parameters:
        - name: id
          in: path
          description: id of EquipmentType to delete
          required: true
          type: integer

  /equipmentTypes/bulk:
    post:
      tags:
        - EquipmentType
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/EquipmentType"
      responses:
        201:
          description: EquipmentType created
  /districtEquipmentTypes:
    get:
      tags:
        - DistrictEquipmentType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/DistrictEquipmentType"
    post:
      tags:
        - DistrictEquipmentType
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/DistrictEquipmentType"
      responses:
        201:
          description: DistrictEquipmentType created
          headers:
            Location:
              description: A link to the DistrictEquipmentType
              type: string
              format: url
          schema:
            $ref: "#/definitions/DistrictEquipmentType"  
  /districtEquipmentTypes/{id}:
    get:
      tags:
        - DistrictEquipmentType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DistrictEquipmentType"
        404:
          description: DistrictEquipmentType not found
      parameters:
        - name: id
          in: path
          description: id of DistrictEquipmentType to fetch
          required: true
          type: integer
    put:
      tags:
        - DistrictEquipmentType
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DistrictEquipmentType"
        404:
          description: DistrictEquipmentType not found
      parameters:
        - name: id
          in: path
          description: id of DistrictEquipmentType to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/DistrictEquipmentType"
  /districtEquipmentTypes/{id}/delete:
    post:
      tags:
        - DistrictEquipmentType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: DistrictEquipmentType not found
      parameters:
        - name: id
          in: path
          description: id of DistrictEquipmentType to delete
          required: true
          type: integer

  /districtEquipmentTypes/bulk:
    post:
      tags:
        - DistrictEquipmentType
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/DistrictEquipmentType"
      responses:
        201:
          description: DistrictEquipmentType created
  /equipmentAttachments:
    get:
      tags:
        - EquipmentAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/EquipmentAttachment"
    post:
      tags:
        - EquipmentAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/EquipmentAttachment"
      responses:
        201:
          description: EquipmentAttachment created
          headers:
            Location:
              description: A link to the EquipmentAttachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/EquipmentAttachment"  
  /equipmentAttachments/{id}:
    get:
      tags:
        - EquipmentAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/EquipmentAttachment"
        404:
          description: EquipmentAttachment not found
      parameters:
        - name: id
          in: path
          description: id of EquipmentAttachment to fetch
          required: true
          type: integer
    put:
      tags:
        - EquipmentAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/EquipmentAttachment"
        404:
          description: EquipmentAttachment not found
      parameters:
        - name: id
          in: path
          description: id of EquipmentAttachment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/EquipmentAttachment"
  /equipmentAttachments/{id}/delete:
    post:
      tags:
        - EquipmentAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: EquipmentAttachment not found
      parameters:
        - name: id
          in: path
          description: id of EquipmentAttachment to delete
          required: true
          type: integer

  /equipmentAttachments/bulk:
    post:
      tags:
        - EquipmentAttachment
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/EquipmentAttachment"
      responses:
        201:
          description: EquipmentAttachment created
  /localarearotationlists:
    get:
      tags:
        - LocalAreaRotationList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/LocalAreaRotationList"
    post:
      tags:
        - LocalAreaRotationList
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/LocalAreaRotationList"
      responses:
        201:
          description: LocalAreaRotationList created
          headers:
            Location:
              description: A link to the LocalAreaRotationList
              type: string
              format: url
          schema:
            $ref: "#/definitions/LocalAreaRotationList"  
  /localarearotationlists/{id}:
    get:
      tags:
        - LocalAreaRotationList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LocalAreaRotationList"
        404:
          description: LocalAreaRotationList not found
      parameters:
        - name: id
          in: path
          description: id of LocalAreaRotationList to fetch
          required: true
          type: integer
    put:
      tags:
        - LocalAreaRotationList
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LocalAreaRotationList"
        404:
          description: LocalAreaRotationList not found
      parameters:
        - name: id
          in: path
          description: id of LocalAreaRotationList to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/LocalAreaRotationList"
  /localarearotationlists/{id}/delete:
    post:
      tags:
        - LocalAreaRotationList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: LocalAreaRotationList not found
      parameters:
        - name: id
          in: path
          description: id of LocalAreaRotationList to delete
          required: true
          type: integer

  /localarearotationlists/bulk:
    post:
      tags:
        - LocalAreaRotationList
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/LocalAreaRotationList"
      responses:
        201:
          description: LocalAreaRotationList created
  /owners:
    get:
      tags:
        - Owner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Owner"
    post:
      tags:
        - Owner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Owner"
      responses:
        201:
          description: Owner created
          headers:
            Location:
              description: A link to the Owner
              type: string
              format: url
          schema:
            $ref: "#/definitions/Owner"  
  /owners/{id}:
    get:
      tags:
        - Owner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Owner"
        404:
          description: Owner not found
      parameters:
        - name: id
          in: path
          description: id of Owner to fetch
          required: true
          type: integer
    put:
      tags:
        - Owner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Owner"
        404:
          description: Owner not found
      parameters:
        - name: id
          in: path
          description: id of Owner to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Owner"
  /owners/{id}/delete:
    post:
      tags:
        - Owner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Owner not found
      parameters:
        - name: id
          in: path
          description: id of Owner to delete
          required: true
          type: integer

  /owners/bulk:
    post:
      tags:
        - Owner
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Owner"
      responses:
        201:
          description: Owner created
  /projects:
    get:
      tags:
        - Project
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Project"
    post:
      tags:
        - Project
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Project"
      responses:
        201:
          description: Project created
          headers:
            Location:
              description: A link to the Project
              type: string
              format: url
          schema:
            $ref: "#/definitions/Project"  
  /projects/{id}:
    get:
      tags:
        - Project
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Project"
        404:
          description: Project not found
      parameters:
        - name: id
          in: path
          description: id of Project to fetch
          required: true
          type: integer
    put:
      tags:
        - Project
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Project"
        404:
          description: Project not found
      parameters:
        - name: id
          in: path
          description: id of Project to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Project"
  /projects/{id}/delete:
    post:
      tags:
        - Project
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Project not found
      parameters:
        - name: id
          in: path
          description: id of Project to delete
          required: true
          type: integer

  /projects/bulk:
    post:
      tags:
        - Project
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Project"
      responses:
        201:
          description: Project created
  /lookuplists:
    get:
      tags:
        - LookupList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/LookupList"
    post:
      tags:
        - LookupList
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/LookupList"
      responses:
        201:
          description: LookupList created
          headers:
            Location:
              description: A link to the LookupList
              type: string
              format: url
          schema:
            $ref: "#/definitions/LookupList"  
  /lookuplists/{id}:
    get:
      tags:
        - LookupList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LookupList"
        404:
          description: LookupList not found
      parameters:
        - name: id
          in: path
          description: id of LookupList to fetch
          required: true
          type: integer
    put:
      tags:
        - LookupList
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LookupList"
        404:
          description: LookupList not found
      parameters:
        - name: id
          in: path
          description: id of LookupList to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/LookupList"
  /lookuplists/{id}/delete:
    post:
      tags:
        - LookupList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: LookupList not found
      parameters:
        - name: id
          in: path
          description: id of LookupList to delete
          required: true
          type: integer

  /lookuplists/bulk:
    post:
      tags:
        - LookupList
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/LookupList"
      responses:
        201:
          description: LookupList created
  /groups:
    get:
      tags:
        - Group
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Group"
    post:
      tags:
        - Group
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Group"
      responses:
        201:
          description: Group created
          headers:
            Location:
              description: A link to the Group
              type: string
              format: url
          schema:
            $ref: "#/definitions/Group"  
  /groups/{id}:
    get:
      tags:
        - Group
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Group"
        404:
          description: Group not found
      parameters:
        - name: id
          in: path
          description: id of Group to fetch
          required: true
          type: integer
    put:
      tags:
        - Group
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Group"
        404:
          description: Group not found
      parameters:
        - name: id
          in: path
          description: id of Group to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Group"
  /groups/{id}/delete:
    post:
      tags:
        - Group
      x-codegen-permission: ADMIN
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Group not found
      parameters:
        - name: id
          in: path
          description: id of Group to delete
          required: true
          type: integer

  /groups/bulk:
    post:
      tags:
        - Group
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Group"
      responses:
        201:
          description: Group created
  /permissions:
    get:
      tags:
        - Permission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
    post:
      tags:
        - Permission
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/PermissionViewModel"
      responses:
        201:
          description: Permission created
          headers:
            Location:
              description: A link to the Permission
              type: string
              format: url
          schema:
            $ref: "#/definitions/PermissionViewModel"  
  /permissions/{id}:
    get:
      tags:
        - Permission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PermissionViewModel"
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to fetch
          required: true
          type: integer
    put:
      tags:
        - Permission
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/PermissionViewModel"
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/PermissionViewModel"
  /permissions/{id}/delete:
    post:
      tags:
        - Permission
      x-codegen-permission: ADMIN
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Permission not found
      parameters:
        - name: id
          in: path
          description: id of Permission to delete
          required: true
          type: integer

  /permissions/bulk:
    post:
      tags:
        - Permission
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
      responses:
        201:
          description: Permission created
  /roles:
    get:
      tags:
        - Role
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RoleViewModel"
    post:
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RoleViewModel"
      responses:
        201:
          description: Role created
          headers:
            Location:
              description: A link to the Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/RoleViewModel"  
  /roles/{id}:
    get:
      tags:
        - Role
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RoleViewModel"
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
    put:
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RoleViewModel"
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RoleViewModel"
  /roles/{id}/delete:
    post:
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Role not found
      parameters:
        - name: id
          in: path
          description: id of Role to delete
          required: true
          type: integer

  /roles/bulk:
    post:
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Role"
      responses:
        201:
          description: Role created

  /rolepermissions/bulk:
    post:
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RolePermission"
      responses:
        201:
          description: Role created
  /users:
    get:
      tags:
        - User
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"
    post:
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserViewModel"
      responses:
        201:
          description: User created
          headers:
            Location:
              description: A link to the User
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserViewModel"  
  /users/{id}:
    get:
      tags:
        - User
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserViewModel"
        404:
          description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
    put:
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserViewModel"
        404:
          description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserViewModel"
  /users/{id}/delete:
    post:
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to delete
          required: true
          type: integer

  /users/bulk:
    post:
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      responses:
        201:
          description: User created

  /usergroups/bulk:
    post:
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      responses:
        201:
          description: User created

  /userroles/bulk:
    post:
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRole"
      responses:
        201:
          description: User created
  /regions:
    get:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Region"
    post:
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
      responses:
        201:
          description: Region created
          headers:
            Location:
              description: A link to the Region
              type: string
              format: url
          schema:
            $ref: "#/definitions/Region"  
  /regions/{id}:
    get:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Region"
        404:
          description: Region not found
      parameters:
        - name: id
          in: path
          description: id of Region to fetch
          required: true
          type: integer
    put:
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Region"
        404:
          description: Region not found
      parameters:
        - name: id
          in: path
          description: id of Region to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
  /regions/{id}/delete:
    post:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Region not found
      parameters:
        - name: id
          in: path
          description: id of Region to delete
          required: true
          type: integer

  /regions/bulk:
    post:
      tags:
        - Region
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Region"
      responses:
        201:
          description: Region created
  /districts:
    get:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/District"
    post:
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/District"
      responses:
        201:
          description: District created
          headers:
            Location:
              description: A link to the District
              type: string
              format: url
          schema:
            $ref: "#/definitions/District"  
  /districts/{id}:
    get:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/District"
        404:
          description: District not found
      parameters:
        - name: id
          in: path
          description: id of District to fetch
          required: true
          type: integer
    put:
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/District"
        404:
          description: District not found
      parameters:
        - name: id
          in: path
          description: id of District to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/District"
  /districts/{id}/delete:
    post:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: District not found
      parameters:
        - name: id
          in: path
          description: id of District to delete
          required: true
          type: integer

  /districts/bulk:
    post:
      tags:
        - District
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/District"
      responses:
        201:
          description: District created
  /serviceareas:
    get:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ServiceArea"
    post:
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceArea"
      responses:
        201:
          description: ServiceArea created
          headers:
            Location:
              description: A link to the ServiceArea
              type: string
              format: url
          schema:
            $ref: "#/definitions/ServiceArea"  
  /serviceareas/{id}:
    get:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServiceArea"
        404:
          description: ServiceArea not found
      parameters:
        - name: id
          in: path
          description: id of ServiceArea to fetch
          required: true
          type: integer
    put:
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServiceArea"
        404:
          description: ServiceArea not found
      parameters:
        - name: id
          in: path
          description: id of ServiceArea to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceArea"
  /serviceareas/{id}/delete:
    post:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: ServiceArea not found
      parameters:
        - name: id
          in: path
          description: id of ServiceArea to delete
          required: true
          type: integer

  /serviceareas/bulk:
    post:
      tags:
        - ServiceArea
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/ServiceArea"
      responses:
        201:
          description: ServiceArea created
  /cities:
    get:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/City"
    post:
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
      responses:
        201:
          description: City created
          headers:
            Location:
              description: A link to the City
              type: string
              format: url
          schema:
            $ref: "#/definitions/City"  
  /cities/{id}:
    get:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/City"
        404:
          description: City not found
      parameters:
        - name: id
          in: path
          description: id of City to fetch
          required: true
          type: integer
    put:
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/City"
        404:
          description: City not found
      parameters:
        - name: id
          in: path
          description: id of City to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
  /cities/{id}/delete:
    post:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: City not found
      parameters:
        - name: id
          in: path
          description: id of City to delete
          required: true
          type: integer

  /cities/bulk:
    post:
      tags:
        - City
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/City"
      responses:
        201:
          description: City created
  /localAreas:
    get:
      tags:
        - LocalArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/LocalArea"
    post:
      tags:
        - LocalArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/LocalArea"
      responses:
        201:
          description: LocalArea created
          headers:
            Location:
              description: A link to the LocalArea
              type: string
              format: url
          schema:
            $ref: "#/definitions/LocalArea"  
  /localAreas/{id}:
    get:
      tags:
        - LocalArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LocalArea"
        404:
          description: LocalArea not found
      parameters:
        - name: id
          in: path
          description: id of LocalArea to fetch
          required: true
          type: integer
    put:
      tags:
        - LocalArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/LocalArea"
        404:
          description: LocalArea not found
      parameters:
        - name: id
          in: path
          description: id of LocalArea to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/LocalArea"
  /localAreas/{id}/delete:
    post:
      tags:
        - LocalArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: LocalArea not found
      parameters:
        - name: id
          in: path
          description: id of LocalArea to delete
          required: true
          type: integer

  /localAreas/bulk:
    post:
      tags:
        - LocalArea
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/LocalArea"
      responses:
        201:
          description: LocalArea created
  /contacts:
    get:
      tags:
        - Contact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
    post:
      tags:
        - Contact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Contact"
      responses:
        201:
          description: Contact created
          headers:
            Location:
              description: A link to the Contact
              type: string
              format: url
          schema:
            $ref: "#/definitions/Contact"  
  /contacts/{id}:
    get:
      tags:
        - Contact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Contact"
        404:
          description: Contact not found
      parameters:
        - name: id
          in: path
          description: id of Contact to fetch
          required: true
          type: integer
    put:
      tags:
        - Contact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Contact"
        404:
          description: Contact not found
      parameters:
        - name: id
          in: path
          description: id of Contact to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Contact"
  /contacts/{id}/delete:
    post:
      tags:
        - Contact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Contact not found
      parameters:
        - name: id
          in: path
          description: id of Contact to delete
          required: true
          type: integer

  /contacts/bulk:
    post:
      tags:
        - Contact
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
      responses:
        201:
          description: Contact created
  /dumptrucks:
    get:
      tags:
        - DumpTruck
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/DumpTruck"
    post:
      tags:
        - DumpTruck
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/DumpTruck"
      responses:
        201:
          description: DumpTruck created
          headers:
            Location:
              description: A link to the DumpTruck
              type: string
              format: url
          schema:
            $ref: "#/definitions/DumpTruck"  
  /dumptrucks/{id}:
    get:
      tags:
        - DumpTruck
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DumpTruck"
        404:
          description: DumpTruck not found
      parameters:
        - name: id
          in: path
          description: id of DumpTruck to fetch
          required: true
          type: integer
    put:
      tags:
        - DumpTruck
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/DumpTruck"
        404:
          description: DumpTruck not found
      parameters:
        - name: id
          in: path
          description: id of DumpTruck to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/DumpTruck"
  /dumptrucks/{id}/delete:
    post:
      tags:
        - DumpTruck
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: DumpTruck not found
      parameters:
        - name: id
          in: path
          description: id of DumpTruck to delete
          required: true
          type: integer

  /dumptrucks/bulk:
    post:
      tags:
        - DumpTruck
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/DumpTruck"
      responses:
        201:
          description: DumpTruck created
  /notes:
    get:
      tags:
        - Note
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Note"
    post:
      tags:
        - Note
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Note"
      responses:
        201:
          description: Note created
          headers:
            Location:
              description: A link to the Note
              type: string
              format: url
          schema:
            $ref: "#/definitions/Note"  
  /notes/{id}:
    get:
      tags:
        - Note
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Note"
        404:
          description: Note not found
      parameters:
        - name: id
          in: path
          description: id of Note to fetch
          required: true
          type: integer
    put:
      tags:
        - Note
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Note"
        404:
          description: Note not found
      parameters:
        - name: id
          in: path
          description: id of Note to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Note"
  /notes/{id}/delete:
    post:
      tags:
        - Note
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Note not found
      parameters:
        - name: id
          in: path
          description: id of Note to delete
          required: true
          type: integer

  /notes/bulk:
    post:
      tags:
        - Note
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Note"
      responses:
        201:
          description: Note created
  /attachments:
    get:
      tags:
        - Attachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Attachment"
    post:
      tags:
        - Attachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Attachment"
      responses:
        201:
          description: Attachment created
          headers:
            Location:
              description: A link to the Attachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/Attachment"  
  /attachments/{id}:
    get:
      tags:
        - Attachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Attachment"
        404:
          description: Attachment not found
      parameters:
        - name: id
          in: path
          description: id of Attachment to fetch
          required: true
          type: integer
    put:
      tags:
        - Attachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Attachment"
        404:
          description: Attachment not found
      parameters:
        - name: id
          in: path
          description: id of Attachment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Attachment"
  /attachments/{id}/delete:
    post:
      tags:
        - Attachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Attachment not found
      parameters:
        - name: id
          in: path
          description: id of Attachment to delete
          required: true
          type: integer

  /attachments/bulk:
    post:
      tags:
        - Attachment
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Attachment"
      responses:
        201:
          description: Attachment created
  /groupmemberships:
    get:
      tags:
        - GroupMembership
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
    post:
      tags:
        - GroupMembership
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/GroupMembership"
      responses:
        201:
          description: GroupMembership created
          headers:
            Location:
              description: A link to the GroupMembership
              type: string
              format: url
          schema:
            $ref: "#/definitions/GroupMembership"  
  /groupmemberships/{id}:
    get:
      tags:
        - GroupMembership
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GroupMembership"
        404:
          description: GroupMembership not found
      parameters:
        - name: id
          in: path
          description: id of GroupMembership to fetch
          required: true
          type: integer
    put:
      tags:
        - GroupMembership
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GroupMembership"
        404:
          description: GroupMembership not found
      parameters:
        - name: id
          in: path
          description: id of GroupMembership to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/GroupMembership"
  /groupmemberships/{id}/delete:
    post:
      tags:
        - GroupMembership
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: GroupMembership not found
      parameters:
        - name: id
          in: path
          description: id of GroupMembership to delete
          required: true
          type: integer

  /groupmemberships/bulk:
    post:
      tags:
        - GroupMembership
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      responses:
        201:
          description: GroupMembership created
  /histories:
    get:
      tags:
        - History
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/History"
    post:
      tags:
        - History
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        201:
          description: History created
          headers:
            Location:
              description: A link to the History
              type: string
              format: url
          schema:
            $ref: "#/definitions/History"  
  /histories/{id}:
    get:
      tags:
        - History
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/History"
        404:
          description: History not found
      parameters:
        - name: id
          in: path
          description: id of History to fetch
          required: true
          type: integer
    put:
      tags:
        - History
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/History"
        404:
          description: History not found
      parameters:
        - name: id
          in: path
          description: id of History to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
  /histories/{id}/delete:
    post:
      tags:
        - History
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: History not found
      parameters:
        - name: id
          in: path
          description: id of History to delete
          required: true
          type: integer

  /histories/bulk:
    post:
      tags:
        - History
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/History"
      responses:
        201:
          description: History created
  /rentalagreements:
    get:
      tags:
        - RentalAgreement
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalAgreement"
    post:
      tags:
        - RentalAgreement
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalAgreement"
      responses:
        201:
          description: RentalAgreement created
          headers:
            Location:
              description: A link to the RentalAgreement
              type: string
              format: url
          schema:
            $ref: "#/definitions/RentalAgreement"  
  /rentalagreements/{id}:
    get:
      tags:
        - RentalAgreement
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalAgreement"
        404:
          description: RentalAgreement not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreement to fetch
          required: true
          type: integer
    put:
      tags:
        - RentalAgreement
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalAgreement"
        404:
          description: RentalAgreement not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreement to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalAgreement"
  /rentalagreements/{id}/delete:
    post:
      tags:
        - RentalAgreement
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: RentalAgreement not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreement to delete
          required: true
          type: integer

  /rentalagreements/bulk:
    post:
      tags:
        - RentalAgreement
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalAgreement"
      responses:
        201:
          description: RentalAgreement created
  /rentalagreementconditions:
    get:
      tags:
        - RentalAgreementCondition
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalAgreementCondition"
    post:
      tags:
        - RentalAgreementCondition
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalAgreementCondition"
      responses:
        201:
          description: RentalAgreementCondition created
          headers:
            Location:
              description: A link to the RentalAgreementCondition
              type: string
              format: url
          schema:
            $ref: "#/definitions/RentalAgreementCondition"  
  /rentalagreementconditions/{id}:
    get:
      tags:
        - RentalAgreementCondition
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalAgreementCondition"
        404:
          description: RentalAgreementCondition not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreementCondition to fetch
          required: true
          type: integer
    put:
      tags:
        - RentalAgreementCondition
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalAgreementCondition"
        404:
          description: RentalAgreementCondition not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreementCondition to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalAgreementCondition"
  /rentalagreementconditions/{id}/delete:
    post:
      tags:
        - RentalAgreementCondition
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: RentalAgreementCondition not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreementCondition to delete
          required: true
          type: integer

  /rentalagreementconditions/bulk:
    post:
      tags:
        - RentalAgreementCondition
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalAgreementCondition"
      responses:
        201:
          description: RentalAgreementCondition created
  /rentalagreementrates:
    get:
      tags:
        - RentalAgreementRate
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalAgreementRate"
    post:
      tags:
        - RentalAgreementRate
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalAgreementRate"
      responses:
        201:
          description: RentalAgreementRate created
          headers:
            Location:
              description: A link to the RentalAgreementRate
              type: string
              format: url
          schema:
            $ref: "#/definitions/RentalAgreementRate"  
  /rentalagreementrates/{id}:
    get:
      tags:
        - RentalAgreementRate
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalAgreementRate"
        404:
          description: RentalAgreementRate not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreementRate to fetch
          required: true
          type: integer
    put:
      tags:
        - RentalAgreementRate
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalAgreementRate"
        404:
          description: RentalAgreementRate not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreementRate to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalAgreementRate"
  /rentalagreementrates/{id}/delete:
    post:
      tags:
        - RentalAgreementRate
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: RentalAgreementRate not found
      parameters:
        - name: id
          in: path
          description: id of RentalAgreementRate to delete
          required: true
          type: integer

  /rentalagreementrates/bulk:
    post:
      tags:
        - RentalAgreementRate
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalAgreementRate"
      responses:
        201:
          description: RentalAgreementRate created
  /rentalrequests:
    get:
      tags:
        - RentalRequest
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalRequest"
    post:
      tags:
        - RentalRequest
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalRequest"
      responses:
        201:
          description: RentalRequest created
          headers:
            Location:
              description: A link to the RentalRequest
              type: string
              format: url
          schema:
            $ref: "#/definitions/RentalRequest"  
  /rentalrequests/{id}:
    get:
      tags:
        - RentalRequest
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalRequest"
        404:
          description: RentalRequest not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequest to fetch
          required: true
          type: integer
    put:
      tags:
        - RentalRequest
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalRequest"
        404:
          description: RentalRequest not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequest to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalRequest"
  /rentalrequests/{id}/delete:
    post:
      tags:
        - RentalRequest
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: RentalRequest not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequest to delete
          required: true
          type: integer

  /rentalrequests/bulk:
    post:
      tags:
        - RentalRequest
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalRequest"
      responses:
        201:
          description: RentalRequest created
  /rentalrequestattachments:
    get:
      tags:
        - RentalRequestAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalRequestAttachment"
    post:
      tags:
        - RentalRequestAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalRequestAttachment"
      responses:
        201:
          description: RentalRequestAttachment created
          headers:
            Location:
              description: A link to the RentalRequestAttachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/RentalRequestAttachment"  
  /rentalrequestattachments/{id}:
    get:
      tags:
        - RentalRequestAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalRequestAttachment"
        404:
          description: RentalRequestAttachment not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequestAttachment to fetch
          required: true
          type: integer
    put:
      tags:
        - RentalRequestAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalRequestAttachment"
        404:
          description: RentalRequestAttachment not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequestAttachment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalRequestAttachment"
  /rentalrequestattachments/{id}/delete:
    post:
      tags:
        - RentalRequestAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: RentalRequestAttachment not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequestAttachment to delete
          required: true
          type: integer

  /rentalrequestattachments/bulk:
    post:
      tags:
        - RentalRequestAttachment
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalRequestAttachment"
      responses:
        201:
          description: RentalRequestAttachment created
  /rentalrequestrotationlists:
    get:
      tags:
        - RentalRequestRotationList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalRequestRotationList"
    post:
      tags:
        - RentalRequestRotationList
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalRequestRotationList"
      responses:
        201:
          description: RentalRequestRotationList created
          headers:
            Location:
              description: A link to the RentalRequestRotationList
              type: string
              format: url
          schema:
            $ref: "#/definitions/RentalRequestRotationList"  
  /rentalrequestrotationlists/{id}:
    get:
      tags:
        - RentalRequestRotationList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalRequestRotationList"
        404:
          description: RentalRequestRotationList not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequestRotationList to fetch
          required: true
          type: integer
    put:
      tags:
        - RentalRequestRotationList
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalRequestRotationList"
        404:
          description: RentalRequestRotationList not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequestRotationList to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalRequestRotationList"
  /rentalrequestrotationlists/{id}/delete:
    post:
      tags:
        - RentalRequestRotationList
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: RentalRequestRotationList not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequestRotationList to delete
          required: true
          type: integer

  /rentalrequestrotationlists/bulk:
    post:
      tags:
        - RentalRequestRotationList
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalRequestRotationList"
      responses:
        201:
          description: RentalRequestRotationList created
  /rolepermissions:
    get:
      tags:
        - RolePermission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RolePermission"
    post:
      tags:
        - RolePermission
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RolePermission"
      responses:
        201:
          description: RolePermission created
          headers:
            Location:
              description: A link to the RolePermission
              type: string
              format: url
          schema:
            $ref: "#/definitions/RolePermission"  
  /rolepermissions/{id}:
    get:
      tags:
        - RolePermission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RolePermission"
        404:
          description: RolePermission not found
      parameters:
        - name: id
          in: path
          description: id of RolePermission to fetch
          required: true
          type: integer
    put:
      tags:
        - RolePermission
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RolePermission"
        404:
          description: RolePermission not found
      parameters:
        - name: id
          in: path
          description: id of RolePermission to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RolePermission"
  /rolepermissions/{id}/delete:
    post:
      tags:
        - RolePermission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: RolePermission not found
      parameters:
        - name: id
          in: path
          description: id of RolePermission to delete
          required: true
          type: integer

  /rolepermissions/bulk:
    post:
      tags:
        - RolePermission
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/RolePermission"
      responses:
        201:
          description: RolePermission created
  /seniorityaudits:
    get:
      tags:
        - SeniorityAudit
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SeniorityAudit"
    post:
      tags:
        - SeniorityAudit
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SeniorityAudit"
      responses:
        201:
          description: SeniorityAudit created
          headers:
            Location:
              description: A link to the SeniorityAudit
              type: string
              format: url
          schema:
            $ref: "#/definitions/SeniorityAudit"  
  /seniorityaudits/{id}:
    get:
      tags:
        - SeniorityAudit
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SeniorityAudit"
        404:
          description: SeniorityAudit not found
      parameters:
        - name: id
          in: path
          description: id of SeniorityAudit to fetch
          required: true
          type: integer
    put:
      tags:
        - SeniorityAudit
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SeniorityAudit"
        404:
          description: SeniorityAudit not found
      parameters:
        - name: id
          in: path
          description: id of SeniorityAudit to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SeniorityAudit"
  /seniorityaudits/{id}/delete:
    post:
      tags:
        - SeniorityAudit
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SeniorityAudit not found
      parameters:
        - name: id
          in: path
          description: id of SeniorityAudit to delete
          required: true
          type: integer

  /seniorityaudits/bulk:
    post:
      tags:
        - SeniorityAudit
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SeniorityAudit"
      responses:
        201:
          description: SeniorityAudit created
  /timerecords:
    get:
      tags:
        - TimeRecord
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/TimeRecord"
    post:
      tags:
        - TimeRecord
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/TimeRecord"
      responses:
        201:
          description: TimeRecord created
          headers:
            Location:
              description: A link to the TimeRecord
              type: string
              format: url
          schema:
            $ref: "#/definitions/TimeRecord"  
  /timerecords/{id}:
    get:
      tags:
        - TimeRecord
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TimeRecord"
        404:
          description: TimeRecord not found
      parameters:
        - name: id
          in: path
          description: id of TimeRecord to fetch
          required: true
          type: integer
    put:
      tags:
        - TimeRecord
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/TimeRecord"
        404:
          description: TimeRecord not found
      parameters:
        - name: id
          in: path
          description: id of TimeRecord to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/TimeRecord"
  /timerecords/{id}/delete:
    post:
      tags:
        - TimeRecord
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: TimeRecord not found
      parameters:
        - name: id
          in: path
          description: id of TimeRecord to delete
          required: true
          type: integer

  /timerecords/bulk:
    post:
      tags:
        - TimeRecord
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/TimeRecord"
      responses:
        201:
          description: TimeRecord created
  /userfavourites:
    get:
      tags:
        - UserFavourite
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
    post:
      tags:
        - UserFavourite
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite created
          headers:
            Location:
              description: A link to the UserFavourite
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserFavourite"  
  /userfavourites/{id}:
    get:
      tags:
        - UserFavourite
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserFavourite"
        404:
          description: UserFavourite not found
      parameters:
        - name: id
          in: path
          description: id of UserFavourite to fetch
          required: true
          type: integer
    put:
      tags:
        - UserFavourite
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserFavourite"
        404:
          description: UserFavourite not found
      parameters:
        - name: id
          in: path
          description: id of UserFavourite to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
  /userfavourites/{id}/delete:
    post:
      tags:
        - UserFavourite
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: UserFavourite not found
      parameters:
        - name: id
          in: path
          description: id of UserFavourite to delete
          required: true
          type: integer

  /userfavourites/bulk:
    post:
      tags:
        - UserFavourite
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite created
  /userroles:
    get:
      tags:
        - UserRole
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRole"
    post:
      tags:
        - UserRole
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRole"
      responses:
        201:
          description: UserRole created
          headers:
            Location:
              description: A link to the UserRole
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRole"  
  /userroles/{id}:
    get:
      tags:
        - UserRole
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserRole"
        404:
          description: UserRole not found
      parameters:
        - name: id
          in: path
          description: id of UserRole to fetch
          required: true
          type: integer
    put:
      tags:
        - UserRole
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserRole"
        404:
          description: UserRole not found
      parameters:
        - name: id
          in: path
          description: id of UserRole to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRole"
  /userroles/{id}/delete:
    post:
      tags:
        - UserRole
      x-codegen-permission: ADMIN
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: UserRole not found
      parameters:
        - name: id
          in: path
          description: id of UserRole to delete
          required: true
          type: integer

  /userroles/bulk:
    post:
      tags:
        - UserRole
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRole"
      responses:
        201:
          description: UserRole created
  /admin/import:
    get:
      summary: Starts the import process
      tags:
        - Admin
      consumes: []
      produces:      
        - application/octet-stream        
      parameters:                
        - name: path
          in: query
          description: location of the extracted files to parse.  Relative to the folder where files are stored
          type: string
        - name: districts
          in: query
          description: comma seperated list of district IDs to process. 
          type: string
      responses:
        200:
          description: OK
        404:
          description: Attachment not found in system        
  /attachments/{id}/download:
    get:
      summary: Returns the binary file component of an attachment
      tags:
        - Attachment
      consumes: []
      produces:      
        - application/octet-stream        
      parameters:                
        - name: id
          in: path
          description: Attachment Id
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: Attachment not found in system  
  /equipment/recalcSeniority:
    get:
      summary: Recalculates seniority for the database
      description:
        Used to calculate seniority for all database records.      
      tags:
        - Equipment
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: region
          in: query
          description: Region to recalculate
          type: integer
          required: true          
      responses:
        200:
          description: OK          
  /equipment/search:
    get:
      summary: Searches Equipment
      description:
        Used for the equipment search page.
      tags:
        - Equipment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: localareas
          in: query
          description: Local Areas (comma seperated list of id numbers)          
          type: string          
        - name: types
          in: query
          description: Equipment Types (comma seperated list of id numbers)
          type: string          
        - name: equipmentAttachment
          in: query
          description: Searches equipmentAttachment type
          type: string          
        - name: owner
          in: query
          type: integer
        - name: status
          in: query
          description: Status
          type: string
        - name: hired
          in: query
          description: Hired
          type: boolean
        - name: notverifiedsincedate
          in: query
          description: Not Verified Since Date
          type: string
          format: date-time
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/EquipmentViewModel"
  /equipment/{id}/attachments:
    get:
      description: Returns attachments for a particular Equipment
      tags:
        - Equipment
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AttachmentViewModel'
        "404":
           description: Equipment not found
      parameters:
        - name: id
          in: path
          description: id of Equipment to fetch attachments for
          required: true
          type: integer 
  /equipment/{id}/equipmentattachments:
    get:
      tags:
        - Equipment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Equipment to fetch EquipmentAttachments for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/EquipmentAttachment"
  /equipment/{id}/history:
    get:
      description: Returns History for a particular Equipment
      tags:
        - Equipment
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HistoryViewModel'
      parameters:
        - name: id
          in: path
          description: id of Equipment to fetch History for
          required: true
          type: integer
        - name: offset
          in: query
          description: offset for records that are returned 
          required: false
          type: integer
        - name: limit
          in: query
          description: limits the number of records returned.  
          required: false
          type: integer
    post:
      description: Add a History record to the Equipment
      tags:
        - Equipment
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Equipment to add History for
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        200:
          description: OK
        201:
          description: History created
          headers:
            Location:
              description: A link to the History
              type: string
              format: url
          schema:
            $ref: "#/definitions/History" 
  /equipment/{id}/view:
    get:
      tags:
        - Equipment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Equipment to fetch EquipmentViewModel for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/EquipmentViewModel"
  /owners/search:
    get:
      summary: Searches Owners
      description:
        Used for the owner search page.
      tags:
        - Owner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: localareas
          in: query
          description: Local Areas (comma seperated list of id numbers)
          required: false
          type: string
        - name: equipmenttypes
          in: query
          description: Equipment Types (comma seperated list of id numbers)
          required: false
          type: string
        - name: owner
          in: query
          description: Id for a specific Owner
          required: false
          type: integer
        - name: status
          in: query
          description: Status
          required: false
          type: string
        - name: hired
          in: query
          description: Hired
          required: false
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Owner"
  /owners/{id}/attachments:
    get:
      description: Returns attachments for a particular Owner
      tags:
        - Owner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AttachmentViewModel'
        "404":
           description: Owner not found
      parameters:
        - name: id
          in: path
          description: id of Owner to fetch attachments for
          required: true
          type: integer               
  /owners/{id}/contacts:
    get:
      tags:
        - Owner
      description: Gets an Owner's Contacts      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to fetch Contacts for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
    put:
      tags:
        - Owner
      description: Replaces an Owner's Contacts
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to replace Contacts for
          required: true
          type: integer
        - name: item
          in: body
          description: Replacement Owner contacts.
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
    post:
      tags:
        - Owner
      description: Adds Owner Contact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to add a contact for
          required: true
          type: integer
        - name: item
          in: body
          description: Adds to Owner Contact
          required: true
          schema:
            $ref: "#/definitions/Contact"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Contact"
  /owners/{id}/equipment:
    get:
      tags:
        - Owner
      description: Gets an Owner's Equipment      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to fetch Equipment for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"
    put:
      tags:
        - Owner
      description: Replaces an Owner's Equipment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to replace Equipment for
          required: true
          type: integer
        - name: item
          in: body
          description: Replacement Owner Equipment.
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Equipment"
  /owners/{id}/history:
    get:
      description: Returns History for a particular Owner
      tags:
        - Owner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HistoryViewModel'
      parameters:
        - name: id
          in: path
          description: id of Owner to fetch History for
          required: true
          type: integer
        - name: offset
          in: query
          description: offset for records that are returned 
          required: false
          type: integer
        - name: limit
          in: query
          description: limits the number of records returned.  
          required: false
          type: integer
    post:
      description: Add a History record to the Owner
      tags:
        - Owner
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Owner to add History for
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        200:
          description: OK
        201:
          description: History created
          headers:
            Location:
              description: A link to the History
              type: string
              format: url
          schema:
            $ref: "#/definitions/History" 
  /projects/{id}/attachments:
    get:
      description: Returns attachments for a particular Project
      tags:
        - Project
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AttachmentViewModel'
        "404":
           description: Project not found
      parameters:
        - name: id
          in: path
          description: id of Project to fetch attachments for
          required: true
          type: integer 
  /projects/{id}/history:
    get:
      description: Returns History for a particular Project
      tags:
        - Project
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HistoryViewModel'
      parameters:
        - name: id
          in: path
          description: id of Project to fetch History for
          required: true
          type: integer
        - name: offset
          in: query
          description: offset for records that are returned 
          required: false
          type: integer
        - name: limit
          in: query
          description: limits the number of records returned.  
          required: false
          type: integer
    post:
      description: Add a History record to the Project
      tags:
        - Project
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Project to fetch History for
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        200:
          description: OK
        201:
          description: History created
          headers:
            Location:
              description: A link to the History
              type: string
              format: url
          schema:
            $ref: "#/definitions/History" 
  /projects/search:
    get:
      summary: Searches Projects
      description:
        Used for the project search page.
      tags:
        - Project
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: districts
          in: query
          description: Districts (comma seperated list of id numbers)          
          type: string
        - name: project
          in: query
          description: name or partial name for a Project
          required: false
          type: string
        - name: hasRequests
          in: query
          description: if true then only include Projects with active Requests
          required: false
          type: boolean
        - name: hasHires
          in: query
          description: if true then only include Projects with active Rental Agreements
          required: false
          type: boolean
        - name: status
          in: query
          description: if included, filter the results to those with a status matching this string
          type: string
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ProjectSearchResultViewModel"
  /projects/{id}/contacts:
    get:
      tags:
        - Project
      description: Gets an Project's Contacts      
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Project to fetch Contacts for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
    put:
      tags:
        - Project
      description: Replaces an Project's Contacts
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Project to replace Contacts for
          required: true
          type: integer
        - name: item
          in: body
          description: Replacement Project contacts.
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Contact"
    post:
      tags:
        - Project
      description: Adds Project Contact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Project to add a contact for
          required: true
          type: integer
        - name: item
          in: body
          description: Adds to Project Contact
          required: true
          schema:
            $ref: "#/definitions/Contact"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Contact"  
  /roles/{id}/permissions:
    get:
      description: Get all the permissions for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
    put:
      description: Updates the permissions for a role
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
    post:
      description: Adds a permissions to a role
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/PermissionViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
  /rentalagreements/{id}/pdf:
    get:
      description:  Returns a PDF version of the specified rental agreement
      tags:
        - RentalAgreement
      produces:
        - application/pdf
      responses:
        '200':
          description: OK
      parameters:
        - name: id
          in: path
          description: id of RentalAgreement to obtain the PDF for
          required: true
          type: integer                            
  /rentalrequests/{id}/attachments:
    get:
      description: Returns attachments for a particular RentalRequest
      tags:
        - RentalRequest
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AttachmentViewModel'
        "404":
           description: RentalRequest not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequest to fetch attachments for
          required: true
          type: integer           
  /rentalrequests/{id}/history:
    get:
      description: Returns History for a particular RentalRequest
      tags:
        - RentalRequest
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/HistoryViewModel'
      parameters:
        - name: id
          in: path
          description: id of RentalRequest to fetch History for
          required: true
          type: integer
        - name: offset
          in: query
          description: offset for records that are returned 
          required: false
          type: integer
        - name: limit
          in: query
          description: limits the number of records returned.  
          required: false
          type: integer
    post:
      description: Add a History record to the RentalRequest
      tags:
        - RentalRequest
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of RentalRequest to add History for
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/History"
      responses:
        200:
          description: OK
        201:
          description: History created
          headers:
            Location:
              description: A link to the History
              type: string
              format: url
          schema:
            $ref: "#/definitions/History" 
  /rentalrequests/{id}/rentalrequestrotationlist/{rentalRequestRotationListId}:
    put:
      description: Updates a rental request rotation list entry.  Side effect is the LocalAreaRotationList is also updated 
      tags:
        - RentalRequest
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RentalRequestRotationList"
        404:
          description: RentalRequestRotationList not found
      parameters:
        - name: id
          in: path
          description: id of RentalRequest to update
          required: true
          type: integer
        - name: rentalRequestRotationListId
          in: path
          description: id of RentalRequestRotationList to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RentalRequestRotationList"
  /rentalrequests/search:
    get:
      summary: Searches RentalRequests
      description:
        Used for the rental request search page.
      tags:
        - RentalRequest
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: localareas
          in: query
          description: Local Areas (comma seperated list of id numbers)          
          type: string
        - name: project
          in: query
          description: Searches equipmentAttachment type
          type: string                  
        - name: status
          in: query
          description: Status
          type: string
        - name: startDate
          description: Inspection start date
          in: query
          type: string
          format: date-time
        - name: endDate
          description: Inspection end date
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RentalRequestSearchResultViewModel"
  /roles/{id}/users:
    get:
      description: Gets all the users for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the users for a role
      tags:
        - Role
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: Role not found
  /users/current:
    get:
      description: Get the currently logged in user
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CurrentUserViewModel"
  /users/current/favourites:
    put:
      description: Updates a favourite
      tags:
        - CurrentUser
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite created
          headers:
            Location:
              description: A link to the UserFavourite
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserFavourite"            
    post:
      description: Create new favourite for the current user
      tags:
        - CurrentUser
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite created
          headers:
            Location:
              description: A link to the UserFavourite
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserFavourite"
  /users/current/favourites/{favouritetype}:
    get:
      description: Returns a users favourites of a given type.  If type is empty, returns all.
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
        404:
           description: User not found
      parameters:
        - name: favouritetype
          in: path
          description: type of favourite to return
          required: true
          type: string
  /users/current/favourites/{id}/delete:
    post:
      description: Removes a specific user favourite
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
      parameters:
        - name: id
          in: path
          description: id of Favourite to delete
          required: true
          type: integer                  
  /users/{id}/roles:
    get:
      description: Returns the roles for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
           description: User not found
    post:
      description: Adds a role to a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRoleViewModel"
      responses:
        201:
          description: Role created for user
          headers:
            Location:
              description: A link to the User Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the roles for a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: User not found
  /users/{id}/permissions:
    get:
      description: Returns the set of permissions for a user
      tags:
        - User
      x-codegen-permission: ADMIN
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
           description: User not found
  /users/{id}/groups:
    get:
      description: Returns all groups that a user is a member of
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
           description: User not found
    put:
      description: Updates the active set of groups for a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found
    post:
      description: Add to the active set of groups for a user
      tags:
        - User
      x-codegen-permission: ADMIN
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/GroupMembershipViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found  
  /users/{id}/favourites:
    get:
      description: Returns a user's favourites of a given context type
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavouriteViewModel"
        "404":
           description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch favorites for
          required: true
          type: integer
  /regions/{id}/districts:
    get:
      description: Returns the districts for a specific region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/District'
      parameters:
        - name: id
          in: path
          description: id of Region for which to fetch the Districts
          required: true
          type: integer
  /districts/{id}/serviceareas:
    get:
      description: Returns the Service Areas for a specific region
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceArea'
      parameters:
        - name: id
          in: path
          description: id of District for which to fetch the ServiceAreas
          required: true
          type: integer
  /groups/{id}/users:
    get:
      summary: returns users in a given Group
      description:
        Used to get users in a given Group
      tags:
        - Group
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Group to fetch Users for
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"
  /users/search:
    get:
      summary: Searches Users
      description:
        Used to search users.
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:        
        - name: districts
          in: query
          description: Districts (comma seperated list of id numbers)
          type: string
        - name: surname
          in: query
          type: string
        - name: includeInactive
          in: query
          description: True if Inactive users will be returned
          type: boolean
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"
definitions:
  Project:
    type: object
    description: A Provincial Project that my from time to time request equipment under the HETS programme from a Service Area.
    required:
      - id
      - district
      - name
      - status
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Project
      district:
        $ref: '#/definitions/District'
        description: The District associated with this Project record.
      provincialProjectNumber:
        type: string
        maxLength: 150
        description: TO BE REVIEWED WITH THE BUSINESS - The Provincial charge code for the equipment hiring related to this project. This will be the same across multiple service areas that provide equipment for the same Project.
      name:
        type: string
        maxLength: 100
        description: A descriptive name for the Project, useful to the HETS Clerk and Project Manager.
      status:
        type: string
        maxLength: 50
        description: The status of the project to determine if it is listed when creating new requests
      information:
        type: string
        maxLength: 2048
        description: Information about the Project needed by the HETS Clerks. Used for capturing varying (project by project) metadata needed to process requests related to the project.
      rentalRequests:
        type: array
        items:
          $ref: '#/definitions/RentalRequest'
        description: The Rental Requests associated with this Project
      rentalAgreements:
        type: array
        items:
          $ref: '#/definitions/RentalAgreement'
        description: The Rental Agreements associated with this Project
      primaryContact:
        $ref: '#/definitions/Contact'
        description: Link to the designated Primary Contact for the Project - usually the Project Manager requesting to hire equipment.
      contacts:
        type: array
        items:
          $ref: '#/definitions/Contact'
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      history:
        type: array
        items:
          $ref: '#/definitions/History'
  RentalRequest:
    type: object
    description: A request from a Project for one or more of a type of equipment from a specific Local Area.
    required:
      - id
      - project
      - localArea
      - status
      - districtEquipmentType
      - equipmentCount
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Request
      project:
        $ref: '#/definitions/Project'
      localArea:
        $ref: '#/definitions/LocalArea'
        description: A foreign key reference to the system-generated unique identifier for a Local Area
      status:
        type: string
        maxLength: 50
        description: The status of the Rental Request - whether it in progress, completed or was cancelled.
      districtEquipmentType:
        $ref: '#/definitions/DistrictEquipmentType'
        description: A foreign key reference to the system-generated unique identifier for an Equipment Type
      equipmentCount:
        format: int32
        type: integer
        description: The number of pieces of the equipment type wanted for hire as part of this request.
      expectedHours:
        format: int32
        type: integer
        description: The expected number of rental hours for each piece equipment hired against this request, as provided by the Project Manager making the request. 
      expectedStartDate:
        type: string
        format: date-time
        description: The expected start date of each piece of equipment hired against this request, as provided by the Project Manager making the request.
      expectedEndDate:
        type: string
        format: date-time
        description: The expected end date of each piece of equipment hired against this request, as provided by the Project Manager making the request.
      firstOnRotationList:
        $ref: '#/definitions/Equipment'
        description: The first piece of equipment on the rotation list at the time of the creation of the request.
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      history:
        type: array
        items:
          $ref: '#/definitions/History'
      rentalRequestAttachments:
        type: array
        items:
          $ref: '#/definitions/RentalRequestAttachment'
      rentalRequestRotationList:
        type: array
        items:
          $ref: '#/definitions/RentalRequestRotationList'
  RentalRequestAttachment:
    type: object
    description: Attachments that are required as part of the Rental Requests
    required:
      - id
      - rentalRequest
      - attachment
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a RentalRequestAttachment
      rentalRequest:
        $ref: '#/definitions/RentalRequest'
        description: A foreign key reference to the system-generated unique identifier for a Rental Request
      attachment:
        type: string
        maxLength: 150
        description: The name&#x2F;type attachment needed as part of the fulfillment of the request
  RentalRequestRotationList:
    type: object
    description: An eligible piece of equipment for a request and a tracking of the hire offer and response process related to a request for that piece of equipment. Includes a link from the equipment to a Rental Agreement if the equipment was hired to satisfy a part of the request.
    required:
      - id
      - rotationListSortOrder
      - equipment
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a RequestRotationList
      rotationListSortOrder:
        format: int32
        type: integer
        description: The sort order of the piece of equipment on the rotation list at the time the request was created. This is the order the equipment will be offered the available work.
      equipment:
        $ref: '#/definitions/Equipment'
      rentalAgreement:
        $ref: '#/definitions/RentalAgreement'
        description: The rental agreement (if any) created for an accepted hire offer.
      isForceHire:
        type: boolean
        description: True if the HETS Clerk designated the hire of this equipment as being a Forced Hire. A Force Hire implies that the usual seniority rules for hiring are bypassed because of special circumstances related to the hire - e.g. a the hire requires an attachment only one piece of equipment has.
      wasAsked:
        type: boolean
        description: True if the HETS Clerk contacted the equipment owner and asked to hire the piece of equipment.
      askedDateTime:
        type: string
        format: date-time
        description: The Date-Time the HETS clerk contacted the equipment owner and asked to hire the piece of equipment.
      offerResponse:
        type: string
        description: The response to the offer to hire. Null prior to receiving a response; a string after with the response - likely just Yes or No
      offerRefusalReason:
        type: string
        maxLength: 50
        description: The reason why the user refused the offer based on a selection of values from the UI.
      offerResponseDatetime:
        type: string
        format: date-time
        description: The date and time the final response to the offer was established.
      offerResponseNote:
        type: string
        maxLength: 2048
        description: A note entered about the response to the offer from the equipment owner about the offer. Usually used when the offer is a &quot;No&quot; or &quot;Force Hire&quot;.
      note:
        type: string
        maxLength: 2048
        description: An optional general note about the offer.
  RentalAgreement:
    type: object
    description: Information about the hiring of a specific piece of equipment to satisfy part or all of a request from a project. TABLE DEFINITION IN PROGRESS - MORE COLUMNS TO BE ADDED
    required:
      - id
      - number
      - status
      - equipment
      - project
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a RentalAgreement
      number:
        type: string
        maxLength: 30
        description: A system-generated unique rental agreement number in a format defined by the business as suitable for the business and client to see and use.
      status:
        type: string
        maxLength: 50
        description: The current status of the Rental Agreement, such as Active or Complete
      equipment:
        $ref: '#/definitions/Equipment'
        description: A foreign key reference to the system-generated unique identifier for an Equipment
      project:
        $ref: '#/definitions/Project'
        description: A foreign key reference to the system-generated unique identifier for a Project
      rentalAgreementRates:
        type: array
        items:
          $ref: '#/definitions/RentalAgreementRate'
      rentalAgreementConditions:
        type: array
        items:
          $ref: '#/definitions/RentalAgreementCondition'
      timeRecords:
        type: array
        items:
          $ref: '#/definitions/TimeRecord'
      note:
        type: string
        maxLength: 2048
        description: An optional note to be placed onto the Rental Agreement.
      estimateStartWork:
        type: string
        format: date-time
        description: The estimated start date of the work to be placed on the rental agreement.
      datedOn:
        type: string
        format: date-time
        description: The dated on date to put on the Rental Agreement.
      estimateHours:
        format: int32
        type: integer
        description: The estimated number of hours of work to be put onto the Rental Agreement.
      equipmentRate:
        type: number
        format: float
        description: The dollar rate for the piece of equipment itself for this Rental Agreement. Other rates associated with the Rental Agreement are in the Rental Agreement Rate table.
      ratePeriod:
        type: string
        maxLength: 50
        description: The period of the rental rate. The vast majority will be hourly, but the rate could apply across a different period, e.g. daily.
      rateComment:
        type: string
        maxLength: 2048
        description: A comment about the rate for the piece of equipment.
  RentalAgreementRate:
    type: object
    description: The rate associated with an element of a rental agreement.
    required:
      - id
      - rentalAgreement
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a RentalAgreementRate
      rentalAgreement:
        $ref: '#/definitions/RentalAgreement'
        description: A foreign key reference to the system-generated unique identifier for a Rental Agreement
      componentName:
        type: string
        maxLength: 150
        description: Name of the component for the Rental Agreement for which the attached rates apply.
      isAttachment:
        type: boolean
        description: True if this rate is for an attachment to the piece of equipment.
      rate:
        type: number
        format: float
        description: The dollar rate associated with this component of the rental agreement.
      percentOfEquipmentRate:
        format: int32
        type: integer
        description: For other than the actual piece of equipment, the percent of the equipment rate to use for this component of the rental agreement.
      ratePeriod:
        type: string
        maxLength: 50
        description: The period of the rental rate. The vast majority will be hourly, but the rate could apply across a different period, e.g. daily.
      comment:
        type: string
        maxLength: 2048
        description: A comment about the rental of this component of the Rental Agreement.
      timeRecords:
        type: array
        items:
          $ref: '#/definitions/TimeRecord'
  RentalAgreementCondition:
    type: object
    description: A condition about the rental agreement to be displayed on the Rental Agreement.
    required:
      - id
      - rentalAgreement
      - conditionName
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a RentalAgreementCondition
      rentalAgreement:
        $ref: '#/definitions/RentalAgreement'
        description: A foreign key reference to the system-generated unique identifier for a Rental Agreement
      conditionName:
        type: string
        maxLength: 150
        description: The name of the condition to be placed onto the Rental Agreement.
      comment:
        type: string
        maxLength: 2048
        description: A comment about the condition to be applied to the Rental Agreement.
  TimeRecord:
    type: object
    description: A record of time worked for a piece of equipment hired for a specific project within a Local Area.
    required:
      - id
      - rentalAgreement
      - workedDate
      - hours
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a TimeRecord
      rentalAgreement:
        $ref: '#/definitions/RentalAgreement'
        description: A foreign key reference to the system-generated unique identifier for a Rental Agreement
      rentalAgreementRate:
        $ref: '#/definitions/RentalAgreementRate'
        description: The Rental Agreement Rate component to which this Rental Agreement applies. If null, this time applies to the equipment itself.
      workedDate:
        type: string
        format: date-time
        description: The date of the time record entry - the day of the entry if it is a daily entry, or a date in the week in which the work occurred if tracked weekly.
      enteredDate:
        type: string
        format: date-time
        description: The date-time the time record information was entered.
      timePeriod:
        type: string
        maxLength: 20
        description: The time period of the entry - either day or week. HETS Clerk have the option of entering time records on a day-by-day or week-by-week basis.
      hours:
        type: number
        format: float
        description: The number of hours worked by the equipment.
  Equipment:
    type: object
    description: A piece of equipment in the HETS system. Each piece of equipment is of a specific equipment type, owned by an Owner, and is within a Local Area.
    required:
      - id
      - localArea
      - districtEquipmentType
      - owner
      - equipmentCode
      - status
      - receivedDate
      - lastVerifiedDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Equipment
      localArea:
        $ref: '#/definitions/LocalArea'
        description: A foreign key reference to the system-generated unique identifier for a Local Area
      districtEquipmentType:
        $ref: '#/definitions/DistrictEquipmentType'
        description: A foreign key reference to the system-generated unique identifier for a Equipment Type
      owner:
        $ref: '#/definitions/Owner'
        description: A foreign key reference to the system-generated unique identifier for an Owner
      equipmentCode:
        type: string
        maxLength: 25
        description: A human-visible unique code for the piece of equipment, referenced for convenience by the system users - HETS Clerks and Equipment Owners. Generated at record creation time based on the unique Owner prefix (e.g. EDW) and a zero-filled unique number - resulting in a code like EDW-0083.
      status:
        type: string
        maxLength: 50
        description: The current status of the equipment in a UI-controlled string. Initial values are Pending, Approved and Archived, but other values may be added.
      receivedDate:
        type: string
        format: date-time
        description: The date the piece of equipment was first received and recorded in HETS.
      approvedDate:
        type: string
        format: date-time
        description: The date the piece of equipment was first approved in HETS. Part of the seniority calculation for a piece of equipment is based on this date.
      lastVerifiedDate:
        type: string
        format: date-time
        description: The date the equipment was last verified by the HETS Clerk as being still in service in the Local Area and available for the HETS Programme.
      isInformationUpdateNeeded:
        type: boolean
        description: Set true if a need to update the information&#x2F;status of the equipment is needed. Used during the processing of a request when an update is noted, but the Clerk does not have time to make the update.
      informationUpdateNeededReason:
        type: string
        maxLength: 2048
        description: A note about why the needed information&#x2F;status update that is needed about the equipment.
      licencePlate:
        type: string
        maxLength: 20
        description: The licence plate (if any) of the piece of equipment, as entered by the HETS Clerk.
      make:
        type: string
        maxLength: 50
        description: The make of the piece of equipment, as provided by the Equipment Owner.
      model:
        type: string
        maxLength: 50
        description: The model of the piece of equipment, as provided by the Equipment Owner.
      year:
        type: string
        maxLength: 15
        description: The model year of the piece of equipment, as provided by the Equipment Owner.
      operator:
        type: string
        maxLength: 255
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      payRate:
        type: number
        format: float
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      refuseRate:
        type: string
        maxLength: 255
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      serialNumber:
        type: string
        maxLength: 100
        description: The serial number of the piece of equipment as provided by the Equipment Owner. Used to detect and reconcile pieces of equipment moved between Local Areas. Duplicate serial numbers are flagged in the system but permitted. The duplicates are flagged in the UI until the HETS Clerks reconcile the differences - either correcting the serial number or archiving a piece of equipment moved to a new local area.
      size:
        type: string
        maxLength: 128
        description: The size of the piece of equipment, as provided by the Equipment Owner.
      toDate:
        type: string
        format: date-time
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      blockNumber:
        format: int32
        type: integer
        description: The current block number for the piece of equipment as calculated by the Seniority Algorthm for this equipment type in the local area. As currently defined y the business  - 1, 2 or Open
      seniority:
        type: number
        format: float
        description: The current seniority calculation result for this piece of equipment. The calculation is based on the &quot;numYears&quot; of service + average hours of service over the last three fiscal years - as stored in the related fields (serviceHoursLastYear, serviceHoursTwoYearsAgo serviceHoursThreeYearsAgo).
      numberInBlock:
        format: int32
        type: integer
        description: The number in the block of the piece of equipment so that it can be displayed to the user where it will be useful. This saves the user from having to figure out in their head the order when the list is displayed in Rotation Order.
      isSeniorityOverridden:
        type: boolean
        description: True if the Seniority for the piece of equipment was manually overridden. Set if a user has gone in and explicitly updated the seniority base information. Indicates that underlying numbers were manually overridden.
      seniorityOverrideReason:
        type: string
        maxLength: 2048
        description: A text reason for why the piece of equipments underlying data was overridden to change their seniority number.
      seniorityEffectiveDate:
        type: string
        format: date-time
        description: The time the seniority data in the record went into effect. Used to populate the SeniorityAudit table when the seniority data is next updated.
      yearsOfService:
        type: number
        format: float
        description: The number of years of active service of this piece of equipment at the time seniority is calculated - April 1 of the current FY.
      serviceHoursLastYear:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the previous fiscal year
      serviceHoursTwoYearsAgo:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the fiscal year before the last one - e.g. if current year is FY2018 then hours in FY2016
      serviceHoursThreeYearsAgo:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the fiscal year three years ago - e.g. if current year is FY2018 then hours in FY2015
      archiveCode:
        type: string
        maxLength: 50
        description: TO BE REVIEWED - A reason code indicating why a piece of equipment has been archived.
      archiveReason:
        type: string
        maxLength: 2048
        description: An optional comment about why this piece of equipment has been archived.
      archiveDate:
        type: string
        format: date-time
        description: The date on which a user most recenly marked this piece of equipment as archived.
      dumpTruck:
        $ref: '#/definitions/DumpTruck'
        description: A link to a dump truck set if this piece of equipment is an equipment type flagged as a dump truck.
      equipmentAttachments:
        type: array
        items:
          $ref: '#/definitions/EquipmentAttachment'
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      history:
        type: array
        items:
          $ref: '#/definitions/History'
  DumpTruck:
    type: object
    description: Additional attributes about a piece of equipment designated as a Dump Truck. Historically, there was a perceived need to track a lot of informatiion about a dump truck, but in practice, few fields are being completed by users. Places for the attributes are being maintained, but the UI is prompting only for a couple of the fields, and only those fields are likely to be populated. Additional basic information about the attributes can be found on Wikipedia, BC-specific details on MOTI&#39;s CVSE website and www.bclaws.ca&#x2F;EPLibraries&#x2F;bclaws_new&#x2F;document&#x2F;ID&#x2F;freeside&#x2F;30_78#AppendicesAtoK, Appendix A and  B. Any metrics information provided here is from the Equipment Owner.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a DumpTruck
      isSingleAxle:
        type: boolean
        description: True if the vehicle has a single axle. Can be false or null.
      isTandemAxle:
        type: boolean
        description: True if the vehicle has a tandem axle. Can be false or null.
      isTridem:
        type: boolean
        description: True if the Dump Truck is a tridem - a three axle dump truck. Can be false or null. 
      hasPUP:
        type: boolean
        description: True if the Dump Truck has a PUP trailer - a trailer with it&#39;s own hydraulic unloading system. Can be false or null.
      hasBellyDump:
        type: boolean
        description: True if the Dump Truck has a belly dump capability. Can be false or null.
      hasRockBox:
        type: boolean
        description: True if the Dump Truck has a rock box. Can be false or null.
      hasHiliftGate:
        type: boolean
        description: True if the Dump Truck has a high lift gate vs. a traditional gate. Can be false or null.
      isWaterTruck:
        type: boolean
        description: True if the Dump Truck is a Water Truck. Can be false or null. 
      hasSealcoatHitch:
        type: boolean
        description: True if the Dump Truck has a hitch for using sealcoat trailers. Can be false or null.
      rearAxleSpacing:
        type: string
        maxLength: 150
        description: The spacing of the rear axles, if applicable. Usually in metres.
      frontTireSize:
        type: string
        maxLength: 150
        description: The size of of the Front Tires of the Dump Truck.
      frontTireUOM:
        type: string
        maxLength: 150
        description: The Unit of Measure of the Front Tire Size.
      frontAxleCapacity:
        type: string
        maxLength: 150
        description: The rated capacity of the Front Axle.
      rearAxleCapacity:
        type: string
        maxLength: 150
        description: The rated capacity of the Rear Axle.
      legalLoad:
        type: string
        maxLength: 150
        description: The legal load of the vehicle in kg.
      legalCapacity:
        type: string
        maxLength: 150
        description: The legal capacity of the dump truck.
      legalPUPTareWeight:
        type: string
        maxLength: 150
        description: The legal Tare Weight (weight when unloaded) of the PUP trailer.
      licencedGVW:
        type: string
        maxLength: 150
        description: The Gross Vehicle Weight for which the vehicle is licensed. GVW includes the vehicle&#39;s chassis, body, engine, engine fluids, fuel, accessories, driver, passengers and cargo but excluding that of any trailers.
      licencedGVWUOM:
        type: string
        maxLength: 150
        description: The Unit of Measure (UOM) of the licenced GVW.
      licencedTareWeight:
        type: string
        maxLength: 150
        description: The licenced Tare Weight (weight when unloaded) of the vehicle.
      licencedPUPTareWeight:
        type: string
        maxLength: 150
        description: The licenced Tare Weight (weight when unloaded) of the PUP trailer.
      licencedLoad:
        type: string
        maxLength: 150
        description: The licenced maximum load of the vehicle in kg.
      licencedCapacity:
        type: string
        maxLength: 150
        description: The licenced maximum capacity of the vehicle.
      boxLength:
        type: string
        maxLength: 150
        description: The length of the box, in metres. See - http-&#x2F;&#x2F;www.bclaws.ca&#x2F;EPLibraries&#x2F;bclaws_new&#x2F;document&#x2F;ID&#x2F;freeside&#x2F;30_7, appendix B
      boxWidth:
        type: string
        maxLength: 150
        description: The width of the box, in metres. See - http-&#x2F;&#x2F;www.bclaws.ca&#x2F;EPLibraries&#x2F;bclaws_new&#x2F;document&#x2F;ID&#x2F;freeside&#x2F;30_7, appendix B
      boxHeight:
        type: string
        maxLength: 150
        description: The height of the box, in metres. See- http-&#x2F;&#x2F;www.bclaws.ca&#x2F;EPLibraries&#x2F;bclaws_new&#x2F;document&#x2F;ID&#x2F;freeside&#x2F;30_7, appendix B
      boxCapacity:
        type: string
        maxLength: 150
        description: The capacity of the box.
      trailerBoxLength:
        type: string
        maxLength: 150
        description: The length of the trailer box, in metres. See www.bclaws.ca&#x2F;EPLibraries&#x2F;bclaws_new&#x2F;document&#x2F;ID&#x2F;freeside&#x2F;30_7, appendix B
      trailerBoxWidth:
        type: string
        maxLength: 150
        description: The width of the trailer box, in metres. See www.bclaws.ca&#x2F;EPLibraries&#x2F;bclaws_new&#x2F;document&#x2F;ID&#x2F;freeside&#x2F;30_7, appendix B
      trailerBoxHeight:
        type: string
        maxLength: 150
        description: The height of the trailer box, in metres. See www.bclaws.ca&#x2F;EPLibraries&#x2F;bclaws_new&#x2F;document&#x2F;ID&#x2F;freeside&#x2F;30_7, appendix B
      trailerBoxCapacity:
        type: string
        maxLength: 150
        description: The capacity of the trailer box.
  EquipmentType:
    type: object
    description: A provincial-wide Equipment Type, the related Blue Book Chapter Section and related usage attributes.
    required:
      - id
      - name
      - isDumpTruck
      - blueBookSection
      - numberOfBlocks
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an EquipmentName
      name:
        type: string
        maxLength: 50
        uniqueItems: true
        description: The generic name of an equipment type - e.g. Dump Truck, Excavator and so on.
      isDumpTruck:
        type: boolean
        description: True if the Equipment Type is a Dump Truck. Equipment of this type will have a related Dump Truck record containing dump truck-related attributes.
      blueBookSection:
        type: number
        format: float
        description: The section of the Blue Book that is related to equipment types of this name.
      blueBookRateNumber:
        type: number
        format: float
        description: The rate number in the Blue Book that is related to equipment types of this name.
      numberOfBlocks:
        format: int32
        type: integer
        description: The number of blocks defined for the equipment of this name and Blue Book section. In general Dump Truck-class equipment types have 3 blocks, while non-Dump Truck equipment types have 2 blocks.
      maximumHours:
        type: number
        format: float
        description: The maximum number of hours per year that equipment types of this name&#x2F;Blue Book section can work in a year
      extendHours:
        type: number
        format: float
        description: The number of extended hours per year that equipment types of this name&#x2F;Blue Book section can work.
      maxHoursSub:
        type: number
        format: float
        description: The number of substitute hours per year that equipment types of this name&#x2F;Blue Book section can work.
  DistrictEquipmentType:
    type: object
    description: An Equipment Type defined at the District level. Links to a provincial Equipment Type for the name of the equipment but supports the District HETS Clerk setting a local name for the Equipment Type. Within a given District, the same provincial Equipment Type might be reused multiple times in, for example, separate sizes (small, medium, large). This enables local areas with large number of the same Equipment Type to have multiple lists.
    required:
      - id
      - equipmentType
      - district
      - districtEquipmentName
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an EquipmentType
      equipmentType:
        $ref: '#/definitions/EquipmentType'
      district:
        $ref: '#/definitions/District'
      districtEquipmentName:
        type: string
        maxLength: 255
        description: The name of this equipment type used at the District Level. This could be just the equipmentName if this is the only EquipmentType defined in this District, or could be a name that separates out multiple EquipmentTypes used within a District to, for instance, separate out the same EquipmentName by size.
  LocalAreaRotationList:
    type: object
    required:
      - id
      - districtEquipmentType
      - localArea
    properties:
      id:
        format: int32
        type: integer
      districtEquipmentType:
        $ref: '#/definitions/DistrictEquipmentType'
        description: A foreign key reference to the system-generated unique identifier for an Equipment Type
      localArea:
        $ref: '#/definitions/LocalArea'
      askNextBlock1:
        $ref: '#/definitions/Equipment'
        description: The id of the next piece of Block 1 Equipment to be asked for a Rental Request. If null, start from the first piece of equipment in Block 1.
      askNextBlock1Seniority:
        type: number
        format: float
        description: The seniority score of the piece of equipment that is the next to be asked in Block 1.
      askNextBlock2:
        $ref: '#/definitions/Equipment'
        description: The id of the next piece of Block 2 Equipment to be asked for a Rental Request. If null, start from the first piece of equipment in Block 2.
      askNextBlock2Seniority:
        type: number
        format: float
        description: The seniority score of the piece of equipment that is the next to be asked in Block 1.
      askNextBlockOpen:
        $ref: '#/definitions/Equipment'
        description: The id of the next piece of Block Open Equipment to be asked for a Rental Request. If null, start from the first piece of equipment in Block Open.
      askNextBlock2Seniority:
        type: number
        format: float
        description: The seniority score of the piece of equipment that is the next to be asked in Block 1.
  EquipmentAttachment:
    type: object
    description: An Equipment Attachment associated with a piece of Equipment.
    required:
      - id
      - equipment
      - typeName
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an EquipmentAttachment
      equipment:
        $ref: '#/definitions/Equipment'
      typeName:
        type: string
        maxLength: 100
        description: The name of the attachment type
      description:
        type: string
        maxLength: 2048
        description: A description of the equipment attachment if the Equipment Attachment Type Name is insufficient.
  SeniorityAudit:
    type: object
    description: The history of all changes to the seniority of a piece of equipment. The current seniority information (underlying data elements and the calculation result) is in the equipment record. Every time that information changes, the old values are copied to here, with a start date, end date range. In the normal case, an annual update triggers the old values being copied here and the new values put into the equipment record. If a user manually changes the values, the existing values are copied into a record added here.
    required:
      - id
      - startDate
      - endDate
      - localArea
      - equipment
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a SeniorityAudit
      startDate:
        type: string
        format: date-time
        description: The effective date that the Seniority data in this record went into effect.
      endDate:
        type: string
        format: date-time
        description: The effective date at which the Seniority data in this record ceased to be in effect.
      localArea:
        $ref: '#/definitions/LocalArea'
        description: A foreign key reference to the system-generated unique identifier for a Local Area
      equipment:
        $ref: '#/definitions/Equipment'
        description: A foreign key reference to the system-generated unique identifier for an Equipment
      blockNumber:
        format: int32
        type: integer
        description: The block number for the piece of equipment as calculated by the Seniority Algorthm for this equipment type in the local area. As currently defined by the business - 1, 2 or Open
      owner:
        $ref: '#/definitions/Owner'
        description: A foreign key reference to the system-generated unique identifier for an Owner
      ownerOrganizationName:
        type: string
        maxLength: 150
        description: The name of the organization of the owner from the Owner Record, captured at the time this record was created.
      seniority:
        type: number
        format: float
        description: The seniority calculation result for this piece of equipment. The calculation is based on the &quot;numYears&quot; of service + average hours of service over the last three fiscal years - as stored in the related fields (serviceHoursLastYear, serviceHoursTwoYearsAgo serviceHoursThreeYearsAgo).
      serviceHoursLastYear:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the previous fiscal year
      serviceHoursTwoYearsAgo:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the fiscal year before the last one - e.g. if current year is FY2018 then hours in FY2016
      serviceHoursThreeYearsAgo:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the fiscal year three years ago - e.g. if current year is FY2018 then hours in FY2015
      isSeniorityOverridden:
        type: boolean
        description: True if the Seniority for the piece of equipment was manually overridden. Set if a user has gone in and explicitly updated the seniority base information. Indicates that underlying numbers were manually overridden.
      seniorityOverrideReason:
        type: string
        maxLength: 2048
        description: A text reason for why the piece of equipments underlying data was overridden to change their seniority number.
  Owner:
    type: object
    description: The person or company to which a piece of construction equipment belongs.
    required:
      - id
      - ownerEquipmentCodePrefix
      - organizationName
      - meetsResidency
      - localArea
      - status
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Owner
      ownerEquipmentCodePrefix:
        type: string
        maxLength: 20
        uniqueItems: true
        description: A unique prefix in the system that is used to generate the human-friendly IDs of the equipment. E.g. An owner Edwards might have a prefix &quot;EDW&quot; and their equipment numbered sequentially with that prefix - e.g. EDW-0082.
      organizationName:
        type: string
        maxLength: 150
        description: The name of the organization of the Owner. May simply be the First Name, Last Name of the Owner if the Owner is a sole proprietorship, or the name of a company.
      doingBusinessAs:
        type: string
        maxLength: 150
        description: An official (per BC Registries) alternate name for an Owner organization under which it does business. The application does not verify the name against any registry&#x2F;lookup. 
      registeredCompanyNumber:
        type: string
        maxLength: 150
        description: The BC Registries number under which the business is registered.  The application does not verify the number against any registry&#x2F;lookup.
      meetsResidency:
        type: boolean
        description: True to indicate that the owner of the business has confirmed to the HETS Clerk that they meet the residency requirements of the HETS programme. See the published information about the MOTI HETS programme for information on the owner residency requirements.
      primaryContact:
        $ref: '#/definitions/Contact'
        description: Link to the designated Primary Contact.
      localArea:
        $ref: '#/definitions/LocalArea'
      isMaintenanceContractor:
        type: boolean
        description: True if the owner is contracted by MOTI to handle Maintenance activities in the area - e.g. provided services in address unscheduled issues on the roads in the area.
      workSafeBCPolicyNumber:
        type: string
        maxLength: 50
        description: The Owner&#39;s WorkSafeBC (aka WCB) Insurance Policy Number.
      workSafeBCExpiryDate:
        type: string
        format: date-time
        description: The expiration of the owner&#39;s current WorkSafeBC (aka WCB) permit.
      CGLEndDate:
        type: string
        format: date-time
        description: The end date of the owner&#39;s Commercial General Liability insurance coverage. Coverage is only needed prior to an owner&#39;s piece of equipment starting a rental period (not when in the HETS program but not hired). The details of the coverage can be entered into a Note, or more often - attached as a scanned&#x2F;faxed document.
      status:
        type: string
        maxLength: 50
        description: The status of the owner record in the system. Current set of values are &quot;Pending&quot;, &quot;Approved&quot; and &quot;Archived&quot;. Pending is used when an owner self-registers and a HETS Clerk has not reviewed and Approved the record. Archived is when the owner is no longer part of the HETS programme. &quot;Approved&quot; is used in all other cases.
      archiveCode:
        type: string
        maxLength: 50
        description: TO BE REVIEWED WITH THE BUSINESS - IS THIS NEEDED -A coded reason for why an owner record has been moved to Archived.
      archiveReason:
        type: string
        maxLength: 2048
        description: A text note about why the owner record has been changed to Archived.
      archiveDate:
        type: string
        format: date-time
        description: The date the Owner record was changed to Archived and removed from active use in the system.
      contacts:
        type: array
        items:
          $ref: '#/definitions/Contact'
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      history:
        type: array
        items:
          $ref: '#/definitions/History'
      equipmentList:
        type: array
        items:
          $ref: '#/definitions/Equipment'
  LookupList:
    type: object
    description: Lookup values for various enumerated types in the systems - entity status values, rate types, conditions and others. Used to pull the values out of the code and into the database but without having to have a table for each lookup instance.
    required:
      - id
      - contextName
      - isDefault
      - codeName
      - value
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a LookupList
      contextName:
        type: string
        maxLength: 100
        description: The context within the app in which this lookup list if used. Defined and referenced in the code of the application.
      isDefault:
        type: boolean
        description: True of the value within the lookup list context should be the default for the lookup instance.
      displaySortOrder:
        format: int32
        type: integer
        description: The sort order for list of values within a list context.
      codeName:
        type: string
        maxLength: 30
        description: The a shorter lookup name to find the value. Can be used at the option of the application to present on the screen a short version of the lookup list value.
      value:
        type: string
        maxLength: 100
        description: The fully spelled out value of the lookup entry.
  Contact:
    type: object
    description: A person and their related contact information linked to one or more entities in the system. For examples, there are contacts for Owners, Projects.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Contact
      givenName:
        type: string
        maxLength: 50
        description: The given name of the contact.
      surname:
        type: string
        maxLength: 50
        description: The surname of the contact.
      role:
        type: string
        maxLength: 100
        description: The role of the contact. UI controlled as to whether it is free form or selected from an enumerated list - for initial implementation, the field is freeform.
      notes:
        type: string
        maxLength: 512
        description: A note about the contact maintained by the users.
      emailAddress:
        type: string
        maxLength: 255
        description: The email address for the contact.
      workPhoneNumber:
        type: string
        maxLength: 20
        description: The work phone number for the contact.
      mobilePhoneNumber:
        type: string
        maxLength: 20
        description: The mobile phone number for the contact.
      faxPhoneNumber:
        type: string
        maxLength: 20
        description: The fax phone number for the contact.
      address1:
        type: string
        maxLength: 80
        description: Address 1 line of the address.
      address2:
        type: string
        maxLength: 80
        description: Address 2 line of the address.
      city:
        type: string
        maxLength: 100
        description: The City of the address.
      province:
        type: string
        maxLength: 50
        description: The Province of the address.
      postalCode:
        type: string
        maxLength: 15
        description: The postal code of the address.
  Note:
    type: object
    description: Text entered about an entity in the application - e.g. piece of Equipment, an Owner, a Project and so on.
    required:
      - id
      - text
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Note
      text:
        type: string
        maxLength: 2048
        description: Notes entered by users about instance of entities - e.g. School Buses and School Bus Owners
      isNoLongerRelevant:
        type: boolean
        description: A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons,  but identified to other users as no longer applicable.
  Attachment:
    type: object
    description: Uploaded documents related to entity in the application - e.g. piece of Equipment, an Owner, a Project and so on.
    required:
      - id
      - fileName
      - fileContents
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an Attachment
      fileName:
        type: string
        maxLength: 2048
        description: Filename as passed by the user uploading the file
      fileContents:
        type: string
        format: binary
        description: Binary contents of the file
      description:
        type: string
        maxLength: 2048
        description: A note about the attachment,  optionally maintained by the user.
      type:
        type: string
        maxLength: 255
        description: Type of attachment
  History:
    type: object
    description: A log entry created by the system based on a triggering event and related to an entity in the application - e.g. piece of Equipment, an Owner, a Project and so on.
    required:
      - id
      - historyText
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a History
      historyText:
        type: string
        maxLength: 2048
        description: The text of the history entry tracked against the related entity.
      createdDate:
        type: string
        format: date-time
        description: Date the record is created.
  UserFavourite:
    type: object
    description: User specific settings for a specific location in the UI. The location and saved settings are internally defined by the UI.
    required:
      - id
      - name
      - value
      - type
      - User
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a UserFavourite
      name:
        type: string
        maxLength: 150
        description: The user-defined name for the recorded settings. Allows the user to save different groups of settings and access each one easily when needed.
      value:
        type: string
        maxLength: 2048
        description: The settings saved by the user. In general,  a UI defined chunk of json that stores the settings in place when the user created the favourite.
      isDefault:
        type: boolean
        description: True if this Favourite is the default for this Context Type. On first access to a context in a session the default favourite for the context it is invoked. If there is no default favourite,  a system-wide default is invoked. On return to the context within a session,  the last parameters used are reapplied.
      type:
        type: string
        maxLength: 150
        description: The type of Favourite
      User:
        $ref: '#/definitions/User'
        description: The User who has this Favourite
  Region:
    type: object
    description: The Ministry of Transportion and Infrastructure REGION.
    required:
      - id
      - ministryRegionID
      - name
      - startDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Region
      ministryRegionID:
        format: int32
        type: integer
        uniqueItems: true
        description: A system generated unique identifier. NOT GENERATED IN THIS SYSTEM.
      regionNumber:
        format: int32
        type: integer
        description: A code that uniquely defines a Region.
      name:
        type: string
        maxLength: 150
        description: The name of a Minsitry Region.
      startDate:
        type: string
        format: date-time
        description: The DATE the business information came into effect. - NOT CURRENTLY ENFORCED IN THIS SYSTEM
      endDate:
        type: string
        format: date-time
        description: The DATE the business information ceased to be in effect. - NOT CURRENTLY ENFORCED IN THIS SYSTEM
  District:
    type: object
    description: The Ministry of Transportion and Infrastructure DISTRICT
    required:
      - id
      - ministryDistrictID
      - name
      - region
      - startDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a District
      ministryDistrictID:
        format: int32
        type: integer
        description: A system generated unique identifier. NOT GENERATED IN THIS SYSTEM.
      name:
        type: string
        maxLength: 150
        description: The Name of a Ministry District.
      districtNumber:
        format: int32
        type: integer
        description: A number that uniquely defines a Ministry District.
      region:
        $ref: '#/definitions/Region'
        description: The region in which the District is found.
      startDate:
        type: string
        format: date-time
        description: The DATE the business information came into effect. - NOT CURRENTLY ENFORCED IN THIS SYSTEM
      endDate:
        type: string
        format: date-time
        description: The DATE the business information ceased to be in effect. - NOT CURRENTLY ENFORCED IN THIS SYSTEM
  ServiceArea:
    type: object
    description: The Ministry of Transportation and Infrastructure SERVICE AREA.
    required:
      - id
      - ministryServiceAreaID
      - name
      - district
      - startDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a ServiceArea
      ministryServiceAreaID:
        format: int32
        type: integer
        description: A system generated unique identifier. NOT GENERATED IN THIS SYSTEM.
      areaNumber:
        format: int32
        type: integer
        description: A number that uniquely defines a Ministry Service Area.
      name:
        type: string
        maxLength: 150
        description: The Name of a Ministry Service Area.
      district:
        $ref: '#/definitions/District'
        description: The district in which the Service Area is found.
      startDate:
        type: string
        format: date-time
        description: The DATE the business information came into effect. - NOT CURRENTLY ENFORCED IN THIS SYSTEM
      endDate:
        type: string
        format: date-time
        description: The DATE the business information ceased to be in effect. - NOT CURRENTLY ENFORCED IN THIS SYSTEM
  LocalArea:
    type: object
    description: A HETS-application defined area that is within a Service Area.
    required:
      - id
      - localAreaNumber
      - name
      - serviceArea
      - startDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a LocalArea
      localAreaNumber:
        format: int32
        type: integer
        description: A system-generated, visible to the user number for the Local Area
      name:
        type: string
        maxLength: 150
        uniqueItems: true
        description: The full name of the Local Area
      serviceArea:
        $ref: '#/definitions/ServiceArea'
        description: The Service Area in which the Local Area is found.
      startDate:
        type: string
        format: date-time
        description: The DATE the business information came into effect. - NOT CURRENTLY ENFORCED IN THIS SYSTEM
      endDate:
        type: string
        format: date-time
        description: The DATE the business information ceased to be in effect. - NOT CURRENTLY ENFORCED IN THIS SYSTEM
  City:
    type: object
    description: A list of cities in BC. Authoritative source to be determined.
    required:
      - id
      - name
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a City
      name:
        type: string
        maxLength: 150
        description: The name of the City
  User:
    type: object
    description: An identified user in the HETS Application that has a defined authorization level.
    required:
      - id
      - givenName
      - surname
      - active
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a User
      givenName:
        type: string
        maxLength: 50
        description: Given name of the user.
      surname:
        type: string
        maxLength: 50
        description: Surname of the user.
      initials:
        type: string
        maxLength: 10
        description: Initials of the user, to be presented where screen space is at a premium.
      email:
        type: string
        maxLength: 255
        description: The email address of the user in the system.
      active:
        type: boolean
        description: A flag indicating the User is active in the system. Set false to remove access to the system for the user.
      smUserId:
        type: string
        maxLength: 255
        description: Security Manager User ID
      guid:
        type: string
        maxLength: 255
        description: The GUID unique to the user as provided by the authentication system. In this case, authentication is done by Siteminder and the GUID uniquely identifies the user within the user directories managed by Siteminder - e.g. IDIR and BCeID. The GUID is equivalent to the IDIR Id, but is guaranteed unique to a person, while the IDIR ID is not - IDIR IDs can be recycled.
      smAuthorizationDirectory:
        type: string
        maxLength: 255
        description: The user directory service used by Siteminder to authenticate the user - usually IDIR or BCeID.
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      groupMemberships:
        type: array
        items:
          $ref: '#/definitions/GroupMembership'
      District:
        $ref: '#/definitions/District'
        description: The District that the User belongs to
  UserRole:
    type: object
    description: A join table that provides allows each user to have any number of Roles in the system.  At login time the user is given the sum of the permissions of the roles assigned to that user. 
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a UserRole
      effectiveDate:
        type: string
        format: date-time
        description: The date on which the user was given the related role.
      expiryDate:
        type: string
        format: date-time
        description: The date on which a role previously assigned to a user was removed from that user.
      role:
        $ref: '#/definitions/Role'
        description: A foreign key reference to the system-generated unique identifier for a Role
  Role:
    type: object
    description: A HETS application-managed Role that has a selected list of permissions and can be assigned to Users. A role coresponds to the authorization level provided a user based on the work for which they are responsible.
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Role
      name:
        type: string
        maxLength: 255
        description: The name of the Role, as established by the user creating the role.
      description:
        type: string
        maxLength: 2048
        description: A description of the role as set by the user creating&#x2F;updating the role.
      rolePermissions:
        type: array
        items:
          $ref: '#/definitions/RolePermission'
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
  RolePermission:
    type: object
    description: A permission that is part of a Role - a component of the authorization provided by the Role to the user to which the Role is assigned.
    required:
      - id
      - role
      - permission
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a RolePermission
      role:
        $ref: '#/definitions/Role'
      permission:
        $ref: '#/definitions/Permission'
        description: A foreign key reference to the system-generated unique identifier for a Permission
  Permission:
    type: object
    description: A named element of authorization defined in the code that triggers some behavior in the application. For example, a permission might allow users to see data or to have access to functionality not accessible to users without that permission. Permissions are created as needed to the application code and are added to the permissions table by data migrations executed at the time the software that uses the permission is deployed.
    required:
      - id
      - code
      - name
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Permission
      code:
        type: string
        maxLength: 50
        uniqueItems: true
        description: The name of the permission referenced in the software of the application.
      name:
        type: string
        maxLength: 150
        uniqueItems: true
        description: The &#39;user friendly&#39; name of the permission exposed to the user selecting the permissions to be included in a Role.
      description:
        type: string
        maxLength: 2048
        description: A description of the purpose of the permission and exposed to the user selecting the permissions to be included in a Role.
  GroupMembership:
    type: object
    description: The users associated with a given group that has been defined in the application.
    required:
      - id
      - active
      - group
      - user
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a GroupMembership
      active:
        type: boolean
        description: A flag indicating the User is active in the group. Set false to remove the user from the designated group.
      group:
        $ref: '#/definitions/Group'
        description: A foreign key reference to the system-generated unique identifier for a Group
      user:
        $ref: '#/definitions/User'
        description: A foreign key reference to the system-generated unique identifier for a User
  Group:
    type: object
    description: A named entity that is used to create a arbitrary collection of users into a group. For example, the HETS Clerks are in the group Clerks. Groups, like permissions are defined by and referenced in code.
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Group
      name:
        type: string
        maxLength: 150
        uniqueItems: true
        description: The name of the group, as refenced in the code.
      description:
        type: string
        maxLength: 2048
        description: A description of the group that is presented to the user when they are setting a user into a group.
  ImportMap:
    type: object
    required:
      - id
      - oldTable
      - newTable
      - oldKey
      - newKey
    properties:
      id:
        format: int32
        type: integer
        description: A system generated unique identifier for the ImportMap
      oldTable:
        type: string
        description: Table name in old system
      newTable:
        type: string
        description: Table name in new system.
      oldKey:
        type: string
        maxLength: 250
        description: Old primary key for record
      newKey:
        format: int32
        type: integer
        description: New primary key for record
  AttachmentViewModel:
    type: object
    x-codegen-viewmodel: true
    description: Uploaded documents related to entity in the application - e.g. piece of Equipment, an Owner, a Project and so on.
    required:
      - id
      - fileName
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for an Attachment
      fileName:
        type: string
        maxLength: 2048
        description: Filename as passed by the user uploading the file
      fileSize:
        type: integer
        format: int32        
      description:
        type: string
        maxLength: 2048
        description: A note about the attachment,  optionally maintained by the user.
      type:
        type: string
        maxLength: 255
        description: Type of attachment
      lastUpdateUserid:
        type: string
        description: Audit information - SM User Id for the User who most recently updated the record.
      lastUpdateTimestamp:
        type: string
        format: date-time
        description: Audit information - Timestamp for record modification        
  HistoryViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id      
    properties:
      id:
        format: int32
        type: integer
        uniqueItems: true
        description: A system-generated unique identifier for a History
      historyText:
        type: string
        maxLength: 2048
        description: The text of the history entry tracked against the related entity.
      lastUpdateUserid:
        type: string
        description: Audit information - SM User Id for the User who most recently updated the record.
      lastUpdateTimestamp:
        type: string
        format: date-time
        description: Audit information - Timestamp for record modification       
      affectedEntityId:
        format: int32
        type: integer
        description: The primary key of the affected record        
  EquipmentCodeViewModel:
    type: object
    x-codegen-viewmodel: true        
    description: Equipment Code is a combination of the Owner Equipment Prefix and the numeric identifier for the next piece of equipment.
    properties:
      equipmentCode:
        type: string
        description: The Equipment Code
  EquipmentViewModel:
    type: object
    x-codegen-viewmodel: true        
    description: A piece of equipment in the HETS system. Each piece of equipment is of a specific equipment type, owned by an Owner, and is within a Local Area.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: A system-generated unique identifier for a Equipment
      localArea:
        $ref: '#/definitions/LocalArea'
      districtEquipmentType:
        $ref: '#/definitions/DistrictEquipmentType'
        description: A foreign key reference to the system-generated unique identifier for a Equipment Type
      owner:
        $ref: '#/definitions/Owner'
      equipmentCode:
        type: string
        maxLength: 25
        description: A human-visible unique code for the piece of equipment, referenced for convenience by the system users - HETS Clerks and Equipment Owners. Generated at record creation time based on the unique Owner prefix (e.g. EDW) and a zero-filled unique number - resulting in a code like EDW-0083.
      status:
        type: string
        maxLength: 50
        description: The current status of the equipment in a UI-controlled string. Initial values are Pending, Approved and Archived, but other values may be added.
      receivedDate:
        type: string
        format: date-time
        description: The date the piece of equipment was first received and recorded in HETS.
      approvedDate:
        type: string
        format: date-time
        description: The date the piece of equipment was first approved in HETS. Part of the seniority calculation for a piece of equipment is based on this date.
      lastVerifiedDate:
        type: string
        format: date-time
        description: The date the equipment was last verified by the HETS Clerk as being still in service in the Local Area and available for the HETS Programme.
      isInformationUpdateNeeded:
        type: boolean
        description: Set true if a need to update the information&#x2F;status of the equipment is needed. Used during the processing of a request when an update is noted, but the Clerk does not have time to make the update.
      informationUpdateNeededReason:
        type: string
        maxLength: 2048
        description: A note about why the needed information&#x2F;status update that is needed about the equipment.
      licencePlate:
        type: string
        maxLength: 20
        description: The licence plate (if any) of the piece of equipment, as entered by the HETS Clerk.
      make:
        type: string
        maxLength: 50
        description: The make of the piece of equipment, as provided by the Equipment Owner.
      model:
        type: string
        maxLength: 50
        description: The model of the piece of equipment, as provided by the Equipment Owner.
      year:
        type: string
        maxLength: 15
        description: The model year of the piece of equipment, as provided by the Equipment Owner.
      type:
        type: string
        maxLength: 255
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      operator:
        type: string
        maxLength: 255
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      payRate:
        type: number
        format: float
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      refuseRate:
        type: string
        maxLength: 255
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      serialNumber:
        type: string
        maxLength: 100
        description: The serial number of the piece of equipment as provided by the Equipment Owner. Used to detect and reconcile pieces of equipment moved between Local Areas. Duplicate serial numbers are flagged in the system but permitted. The duplicates are flagged in the UI until the HETS Clerks reconcile the differences - either correcting the serial number or archiving a piece of equipment moved to a new local area.
      size:
        type: string
        maxLength: 128
        description: The size of the piece of equipment, as provided by the Equipment Owner.
      toDate:
        type: string
        format: date-time
        description: TO BE REVIEWED WITH THE BUSINESS - WHAT IS THIS?
      blockNumber:
        type: number
        format: float
        description: The current block number for the piece of equipment as calculated by the Seniority Algorthm for this equipment type in the local area. As currently defined y the business  - 1, 2 or Open
      seniority:
        type: number
        format: float
        description: The current seniority calculation result for this piece of equipment. The calculation is based on the &quot;numYears&quot; of service + average hours of service over the last three fiscal years - as stored in the related fields (serviceHoursLastYear, serviceHoursTwoYearsAgo serviceHoursThreeYearsAgo).
      isSeniorityOverridden:
        type: boolean
        description: True if the Seniority for the piece of equipment was manually overridden. Set if a user has gone in and explicitly updated the seniority base information. Indicates that underlying numbers were manually overridden.
      seniorityOverrideReason:
        type: string
        maxLength: 2048
        description: A text reason for why the piece of equipments underlying data was overridden to change their seniority number.
      seniorityEffectiveDate:
        type: string
        format: date-time
        description: The time the seniority data in the record went into effect. Used to populate the SeniorityAudit table when the seniority data is next updated.
      yearsOfService:
        type: number
        format: float
        description: The number of years of active service of this piece of equipment at the time seniority is calculated - April 1 of the current FY.
      serviceHoursLastYear:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the previous fiscal year
      serviceHoursTwoYearsAgo:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the fiscal year before the last one - e.g. if current year is FY2018 then hours in FY2016
      serviceHoursThreeYearsAgo:
        type: number
        format: float
        description: Number of hours of service by this piece of equipment in the fiscal year three years ago - e.g. if current year is FY2018 then hours in FY2015
      archiveCode:
        type: string
        maxLength: 50
        description: TO BE REVIEWED - A reason code indicating why a piece of equipment has been archived.
      archiveReason:
        type: string
        maxLength: 2048
        description: An optional comment about why this piece of equipment has been archived.
      archiveDate:
        type: string
        format: date-time
        description: The date on which a user most recenly marked this piece of equipment as archived.
      dumpTruck:
        $ref: '#/definitions/DumpTruck'
        description: A link to a dump truck set if this piece of equipment is an equipment type flagged as a dump truck.
      equipmentAttachments:
        type: array
        items:
          $ref: '#/definitions/EquipmentAttachment'
      notes:
        type: array
        items:
          $ref: '#/definitions/Note'
      attachments:
        type: array
        items:
          $ref: '#/definitions/Attachment'
      history:
        type: array
        items:
          $ref: '#/definitions/History'
      seniorityAudit:
        type: array
        items:
          $ref: '#/definitions/SeniorityAudit'
      serviceHoursThisYear:
        type: integer
        description: number of hours worked on current fiscal year
      hasDuplicates:
        type: boolean
      duplicateEquipment:
        type: array
        items:
          $ref: '#/definitions/Equipment'
      isWorking:
        type: boolean
        description: true if the equipment is working
      lastTimeRecordDateThisYear:
        type: string
        format: date-time 
  ProjectSearchResultViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      district:
        $ref: '#/definitions/District'
      name:
        type: string
      primaryContact:
        $ref: '#/definitions/Contact'
      hires:
        format: int32
        type: integer
        description: count of RentalAgreement.status is Active for the project
      requests:
        format: int32
        type: integer
        description: count of RentalRequest.status is Active for the project
      status:
        type: string
        description: Project status  
  RentalAgreementPdfViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      number:
        type: string
        maxLength: 30
        description: A system-generated unique rental agreement number in a format defined by the business as suitable for the business and client to see and use.
      status:
        type: string
        maxLength: 50
        description: The current status of the Rental Agreement, such as Active or Complete
      equipment:
        $ref: '#/definitions/Equipment'
        description: A foreign key reference to the system-generated unique identifier for an Equipment
      project:
        $ref: '#/definitions/Project'
        description: A foreign key reference to the system-generated unique identifier for a Project
      rentalAgreementRates:
        type: array
        items:
          $ref: '#/definitions/RentalAgreementRate'
      rentalAgreementConditions:
        type: array
        items:
          $ref: '#/definitions/RentalAgreementCondition'
      timeRecords:
        type: array
        items:
          $ref: '#/definitions/TimeRecord'
      note:
        type: string
        maxLength: 2048
        description: An optional note to be placed onto the Rental Agreement.
      estimateStartWork:
        type: string        
        description: The estimated start date of the work to be placed on the rental agreement.
      datedOn:
        type: string
        description: The dated on date to put on the Rental Agreement.
      estimateHours:
        format: int32
        type: integer
        description: The estimated number of hours of work to be put onto the Rental Agreement.
      equipmentRate:
        type: number
        format: float
        description: The dollar rate for the piece of equipment itself for this Rental Agreement. Other rates associated with the Rental Agreement are in the Rental Agreement Rate table.
      ratePeriod:
        type: string
        maxLength: 50
        description: The period of the rental rate. The vast majority will be hourly, but the rate could apply across a different period, e.g. daily.
      rateComment:
        type: string
        maxLength: 2048
        description: A comment about the rate for the piece of equipment.        
  RentalRequestSearchResultViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      localArea:
        $ref: '#/definitions/LocalArea'
      equipmentCount:
        type: integer
      equipmentTypeName:
        type: string
      projectName:
        type: string
      primaryContact:
        $ref: '#/definitions/Contact'
      status:
        type: string
        description: Project status
      projectId:
        type: integer
      expectedStartDate:
        type: string
        format: date-time
      expectedEndDate:
        type: string
        format: date-time      
  UserViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name      
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      smUserId:
        type: string
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      groupMemberships:
        type: array
        items:
          $ref: '#/definitions/GroupMembership'
      district:
        $ref: '#/definitions/District'
        description: The District to which this User is affliated.
  CurrentUserViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name      
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      smUserId:
        type: string
      smAuthorizationDirectory:
        type: string
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      groupMemberships:
        type: array
        items:
          $ref: '#/definitions/GroupMembership'
      district:
        $ref: '#/definitions/District'
        description: The District to which this User is affliated.
  UserDetailsViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      initials:
        type: string
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      permissions:
        type: array
        items:
          $ref: '#/definitions/PermissionViewModel'
  UserRoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - effectiveDate
      - userId
      - roleId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      effectiveDate:
        type: string
        format: date-time
      expiryDate:
        type: string
        format: date-time
      userId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      roleId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  RoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  RolePermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - roleId
      - permissionId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      roleId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      permissionId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  PermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      code:
        type: string
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  GroupMembershipViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - active
      - userId
      - groupId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      active:
        type: boolean
      groupId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      userId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  GroupViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  UserFavouriteViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description:  Context Name
        x-chance-type: name
      value:
        type: string
        description:  Saved search
        x-chance-type: word
      isDefault:
        type: boolean
      type:        
        type: string
        description: Type of favourite
  NotificationViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      eventId:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      event2Id:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      hasBeenViewed:
        type: boolean
      isWatchNotification:
        type: boolean
      isExpired:
        type: boolean
      isAllDay:
        type: boolean
      priorityCode:
        type: string
      userId:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000

securityDefinitions: {}
